import unittest
from protoc_gen_pyhttp.template import execute, ServiceDesc, MethodDesc


class TemplateTest(unittest.TestCase):

    def test_execute(self):
        # 构造 ServiceDesc 对象作为输入
        service = ServiceDesc()
        service.entity_package = "hello_world_pd2"
        service.pascal_case_name = "HelloWorld"
        service.snake_case_name = "hello_world"
        service.metadata = "api/helloworld/helloworld.proto"
        service.comment = ["HelloWorld service"]
        service.methods = [
            MethodDesc(),
            MethodDesc(),
            MethodDesc(),
            MethodDesc(),
        ]
        # 使用一些示例数据填充 MethodDesc 对象
        service.methods[0].pascal_case_name = "SayHello"
        service.methods[0].snake_case_name = "say_hello"
        service.methods[0].request = "SayHelloRequest"
        service.methods[0].response = "SayHelloResponse"
        service.methods[0].comment = ["Say hello method"]
        service.methods[0].path = "/web/say/hello/{name}"
        service.methods[0].method = "GET"
        service.methods[0].has_vars = True
        service.methods[0].has_body = False

        service.methods[1].pascal_case_name = "GetTime"
        service.methods[1].snake_case_name = "get_time"
        service.methods[1].request = "GetTimeRequest"
        service.methods[1].response = "GetTimeResponse"
        service.methods[1].comment = ["Get current time method"]
        service.methods[1].path = "/web/time"
        service.methods[1].method = "GET"
        service.methods[1].has_vars = False
        service.methods[1].has_body = False

        service.methods[2].pascal_case_name = "EchoV1"
        service.methods[2].snake_case_name = "echo_v1"
        service.methods[2].request = "EchoV1Request"
        service.methods[2].response = "EchoV1Response"
        service.methods[2].comment = ["Echo message method"]
        service.methods[2].path = "/web/v1/echo"
        service.methods[2].method = "POST"
        service.methods[2].has_vars = False
        service.methods[2].has_body = True
        service.methods[2].body = ""

        service.methods[3].pascal_case_name = "EchoV2"
        service.methods[3].snake_case_name = "echo_v2"
        service.methods[3].request = "EchoV2Request"
        service.methods[3].response = "EchoV2Response"
        service.methods[3].comment = ["EchoV2 message method"]
        service.methods[3].path = "/web/v2/echo/{time}"
        service.methods[3].method = "POST"
        service.methods[3].has_vars = True
        service.methods[3].has_body = True
        service.methods[3].body = "echo_v2_body"
        service.methods[3].body_type = "EchoV2Body"

        # 执行模板渲染
        result = execute(service)

        print(result)

        # 进行断言，判断结果是否符合预期
        self.assertIsInstance(result, str)
        self.assertTrue(result.startswith("# Generated by the protoc-gen-py-http"))
        self.assertIn("HelloWorldServiceServicer(object)", result)
        self.assertIn("class HelloWorldService(object)", result)
        self.assertIn("def say_hello(self, path_params: _Dict[str, _Any], __: bytes)", result)
        self.assertIn("def get_time(self, _: _Dict[str, _Any], __: bytes)", result)
        self.assertIn("def echo_v1(self, _: _Dict[str, _Any], body: bytes)", result)
        self.assertIn("def echo_v2(self, path_params: _Dict[str, _Any], body: bytes)", result)


if __name__ == '__main__':
    unittest.main()
