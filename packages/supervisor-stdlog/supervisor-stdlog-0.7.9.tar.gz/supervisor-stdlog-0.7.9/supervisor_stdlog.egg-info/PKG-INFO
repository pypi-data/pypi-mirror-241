Metadata-Version: 2.1
Name: supervisor-stdlog
Version: 0.7.9
Summary: A simple supervisord event listener to relay process stdout and stderr to supervisor's stdout.
Home-page: http://github.com/razielanarki/supervisor-stdlog
Author: Raziel Anarki
Author-email: razielanarki@semmi.se
License: License :: OSI Approved :: MIT License
Keywords: supervisord,supervisord-configuration,logging,containerization
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: No Input/Output (Daemon)
Classifier: Intended Audience :: System Administrators
Classifier: Natural Language :: English
Classifier: Operating System :: POSIX
Classifier: Topic :: System :: Boot
Classifier: Topic :: System :: Monitoring
Classifier: Topic :: System :: Systems Administration
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: supervisor>=4.2.5

# supervisor-stdlog

A simple [supervisord](http://supervisord.org/) event listener to relay
process **stdout** _and_ **stderr** to supervisor's stdout.

This is useful in situations where supervisor oversees processes in a container / stack,  
so the logs can be collected by the orchestating runtime.

## Installation

Just install via pip

```shell
pip install supervisor-stdlog
```
...or add to your requirements.txt:

```ini
supervisor-stdlog==0.7.9
```

## Usage

An example supervisord.conf:

```ini
[supervisord]
nodaemon = true

[program:web]
command = ...
stdout_events_enabled = true
stderr_events_enabled = true

[eventlistener:stdlog]
events = PROCESS_LOG
command = supervisor-stdlog
result_handler = supervisor_stdlog:log_handler
buffer_size = 100
```
