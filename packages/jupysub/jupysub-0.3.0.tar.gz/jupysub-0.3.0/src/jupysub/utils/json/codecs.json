{
 "codecs.IncrementalEncoder": "class codecs.IncrementalEncoder(errors='strict')",
 "codecs.StreamWriter": "class codecs.StreamWriter(stream, errors='strict')",
 "codecs.getreader": "codecs.getreader(encoding)",
 "codecs.getincrementalencoder": "codecs.getincrementalencoder(encoding)",
 "codecs.getdecoder": "codecs.getdecoder(encoding)",
 "codecs.StreamReader": "class codecs.StreamReader(stream, errors='strict')",
 "codecs.strict_errors": "codecs.strict_errors(exception)",
 "codecs.xmlcharrefreplace_errors": "codecs.xmlcharrefreplace_errors(exception)",
 "codecs.getencoder": "codecs.getencoder(encoding)",
 "codecs.register_error": "codecs.register_error(name, error_handler)",
 "codecs.getincrementaldecoder": "codecs.getincrementaldecoder(encoding)",
 "codecs.EncodedFile": "codecs.EncodedFile(file, data_encoding, file_encoding=None, errors='strict')",
 "codecs.register": "codecs.register(search_function)",
 "codecs.unregister": "codecs.unregister(search_function)",
 "codecs.namereplace_errors": "codecs.namereplace_errors(exception)",
 "codecs.StreamRecoder": "class codecs.StreamRecoder(stream, encode, decode, Reader, Writer, errors='strict')",
 "codecs.iterencode": "codecs.iterencode(iterator, encoding, errors='strict', **kwargs)",
 "codecs.backslashreplace_errors": "codecs.backslashreplace_errors(exception)",
 "codecs.lookup_error": "codecs.lookup_error(name)",
 "codecs.CodecInfo": "class codecs.CodecInfo(encode, decode, streamreader=None, streamwriter=None, incrementalencoder=None, incrementaldecoder=None, name=None)",
 "codecs.getwriter": "codecs.getwriter(encoding)",
 "codecs.replace_errors": "codecs.replace_errors(exception)",
 "codecs.encode": "codecs.encode(obj, encoding='utf-8', errors='strict')",
 "codecs.StreamReaderWriter": "class codecs.StreamReaderWriter(stream, Reader, Writer, errors='strict')",
 "codecs.iterdecode": "codecs.iterdecode(iterator, encoding, errors='strict', **kwargs)",
 "codecs.IncrementalDecoder": "class codecs.IncrementalDecoder(errors='strict')",
 "codecs.ignore_errors": "codecs.ignore_errors(exception)",
 "codecs.lookup": "codecs.lookup(encoding)",
 "codecs.decode": "codecs.decode(obj, encoding='utf-8', errors='strict')",
 "codecs.open": "codecs.open(filename, mode='r', encoding=None, errors='strict', buffering=- 1)"
}