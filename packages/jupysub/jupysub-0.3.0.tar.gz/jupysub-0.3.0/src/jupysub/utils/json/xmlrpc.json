{
 "xmlrpc.server.DocXMLRPCServer": "class xmlrpc.server.DocXMLRPCServer(addr, requestHandler=DocXMLRPCRequestHandler, logRequests=True, allow_none=False, encoding=None, bind_and_activate=True, use_builtin_types=True)",
 "xmlrpc.server.SimpleXMLRPCServer": "class xmlrpc.server.SimpleXMLRPCServer(addr, requestHandler=SimpleXMLRPCRequestHandler, logRequests=True, allow_none=False, encoding=None, bind_and_activate=True, use_builtin_types=False)",
 "xmlrpc.client.dumps": "xmlrpc.client.dumps(params, methodname=None, methodresponse=None, encoding=None, allow_none=False)",
 "xmlrpc.server.SimpleXMLRPCRequestHandler": "class xmlrpc.server.SimpleXMLRPCRequestHandler",
 "xmlrpc.server.CGIXMLRPCRequestHandler": "class xmlrpc.server.CGIXMLRPCRequestHandler(allow_none=False, encoding=None, use_builtin_types=False)",
 "xmlrpc.client.DateTime": "class xmlrpc.client.DateTime",
 "xmlrpc.client.ServerProxy": "class xmlrpc.client.ServerProxy(uri, transport=None, encoding=None, verbose=False, allow_none=False, use_datetime=False, use_builtin_types=False, *, headers=(), context=None)",
 "xmlrpc.server.DocXMLRPCRequestHandler": "class xmlrpc.server.DocXMLRPCRequestHandler",
 "xmlrpc.client.loads": "xmlrpc.client.loads(data, use_datetime=False, use_builtin_types=False)",
 "xmlrpc.client.Fault": "class xmlrpc.client.Fault",
 "xmlrpc.client.MultiCall": "class xmlrpc.client.MultiCall(server)",
 "xmlrpc.client.Binary": "class xmlrpc.client.Binary",
 "xmlrpc.client.ProtocolError": "class xmlrpc.client.ProtocolError",
 "xmlrpc.server.DocCGIXMLRPCRequestHandler": "class xmlrpc.server.DocCGIXMLRPCRequestHandler"
}