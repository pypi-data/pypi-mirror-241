{
 "xml.sax.handler.ContentHandler": "class xml.sax.handler.ContentHandler",
 "xml.parsers.expat.ParserCreate": "xml.parsers.expat.ParserCreate(encoding=None, namespace_separator=None)",
 "xml.etree.ElementTree.tostringlist": "xml.etree.ElementTree.tostringlist(element, encoding='us-ascii', method='xml', *, xml_declaration=None, default_namespace=None, short_empty_elements=True)",
 "xml.sax.xmlreader.AttributesImpl": "class xml.sax.xmlreader.AttributesImpl(attrs)",
 "xml.etree.ElementTree.fromstring": "xml.etree.ElementTree.fromstring(text, parser=None)",
 "xml.dom.pulldom.SAX2DOM": "class xml.dom.pulldom.SAX2DOM(documentFactory=None)",
 "xml.etree.ElementTree.register_namespace": "xml.etree.ElementTree.register_namespace(prefix, uri)",
 "xml.sax.handler.DTDHandler": "class xml.sax.handler.DTDHandler",
 "xml.etree.ElementTree.XMLID": "xml.etree.ElementTree.XMLID(text, parser=None)",
 "xml.etree.ElementTree.ProcessingInstruction": "xml.etree.ElementTree.ProcessingInstruction(target, text=None)",
 "xml.sax.xmlreader.IncrementalParser": "class xml.sax.xmlreader.IncrementalParser",
 "xml.etree.ElementTree.C14NWriterTarget": "class xml.etree.ElementTree.C14NWriterTarget(write, *, with_comments=False, strip_text=False, rewrite_prefixes=False, qname_aware_tags=None, qname_aware_attrs=None, exclude_attrs=None, exclude_tags=None)",
 "xml.sax.saxutils.quoteattr": "xml.sax.saxutils.quoteattr(data, entities={})",
 "xml.etree.ElementTree.Element": "class xml.etree.ElementTree.Element(tag, attrib={}, **extra)",
 "xml.sax.handler.ErrorHandler": "class xml.sax.handler.ErrorHandler",
 "xml.sax.make_parser": "xml.sax.make_parser(parser_list=[])",
 "xml.etree.ElementTree.XMLParser": "class xml.etree.ElementTree.XMLParser(*, target=None, encoding=None)",
 "xml.etree.ElementTree.Comment": "xml.etree.ElementTree.Comment(text=None)",
 "xml.sax.xmlreader.InputSource": "class xml.sax.xmlreader.InputSource(system_id=None)",
 "xml.sax.xmlreader.Locator": "class xml.sax.xmlreader.Locator",
 "xml.parsers.expat.ErrorString": "xml.parsers.expat.ErrorString(errno)",
 "xml.etree.ElementTree.indent": "xml.etree.ElementTree.indent(tree, space='\u00a0 ', level=0)",
 "xml.sax.xmlreader.AttributesNSImpl": "class xml.sax.xmlreader.AttributesNSImpl(attrs, qnames)",
 "xml.sax.xmlreader.XMLReader": "class xml.sax.xmlreader.XMLReader",
 "xml.sax.saxutils.unescape": "xml.sax.saxutils.unescape(data, entities={})",
 "xml.etree.ElementInclude.include": "xml.etree.ElementInclude.include(elem, loader=None, base_url=None, max_depth=6)",
 "xml.sax.parseString": "xml.sax.parseString(string, handler, error_handler=handler.ErrorHandler())",
 "xml.dom.getDOMImplementation": "xml.dom.getDOMImplementation(name=None, features=())",
 "xml.etree.ElementTree.dump": "xml.etree.ElementTree.dump(elem)",
 "xml.sax.saxutils.XMLGenerator": "class xml.sax.saxutils.XMLGenerator(out=None, encoding='iso-8859-1', short_empty_elements=False)",
 "xml.sax.parse": "xml.sax.parse(filename_or_stream, handler, error_handler=handler.ErrorHandler())",
 "xml.etree.ElementTree.QName": "class xml.etree.ElementTree.QName(text_or_uri, tag=None)",
 "xml.etree.ElementTree.parse": "xml.etree.ElementTree.parse(source, parser=None)",
 "xml.etree.ElementTree.XMLPullParser": "class xml.etree.ElementTree.XMLPullParser(events=None)",
 "xml.dom.minidom.parseString": "xml.dom.minidom.parseString(string, parser=None)",
 "xml.sax.saxutils.XMLFilterBase": "class xml.sax.saxutils.XMLFilterBase(base)",
 "xml.etree.ElementTree.TreeBuilder": "class xml.etree.ElementTree.TreeBuilder(element_factory=None, *, comment_factory=None, pi_factory=None, insert_comments=False, insert_pis=False)",
 "xml.dom.registerDOMImplementation": "xml.dom.registerDOMImplementation(name, factory)",
 "xml.etree.ElementTree.tostring": "xml.etree.ElementTree.tostring(element, encoding='us-ascii', method='xml', *, xml_declaration=None, default_namespace=None, short_empty_elements=True)",
 "xml.sax.saxutils.escape": "xml.sax.saxutils.escape(data, entities={})",
 "xml.etree.ElementTree.ElementTree": "class xml.etree.ElementTree.ElementTree(element=None, file=None)",
 "xml.etree.ElementTree.XML": "xml.etree.ElementTree.XML(text, parser=None)",
 "xml.etree.ElementTree.fromstringlist": "xml.etree.ElementTree.fromstringlist(sequence, parser=None)",
 "xml.etree.ElementTree.SubElement": "xml.etree.ElementTree.SubElement(parent, tag, attrib={}, **extra)",
 "xml.etree.ElementInclude.default_loader": "xml.etree.ElementInclude.default_loader(href, parse, encoding=None)",
 "xml.etree.ElementTree.canonicalize": "xml.etree.ElementTree.canonicalize(xml_data=None, *, out=None, from_file=None, **options)",
 "xml.dom.pulldom.DOMEventStream": "class xml.dom.pulldom.DOMEventStream(stream, parser, bufsize)",
 "xml.etree.ElementTree.iselement": "xml.etree.ElementTree.iselement(element)",
 "xml.sax.handler.LexicalHandler": "class xml.sax.handler.LexicalHandler",
 "xml.sax.saxutils.prepare_input_source": "xml.sax.saxutils.prepare_input_source(source, base='')",
 "xml.dom.pulldom.PullDom": "class xml.dom.pulldom.PullDom(documentFactory=None)",
 "xml.etree.ElementTree.ParseError": "class xml.etree.ElementTree.ParseError",
 "xml.dom.minidom.parse": "xml.dom.minidom.parse(filename_or_file, parser=None, bufsize=None)",
 "xml.dom.pulldom.parseString": "xml.dom.pulldom.parseString(string, parser=None)",
 "xml.etree.ElementTree.iterparse": "xml.etree.ElementTree.iterparse(source, events=None, parser=None)",
 "xml.dom.pulldom.parse": "xml.dom.pulldom.parse(stream_or_string, parser=None, bufsize=None)",
 "xml.sax.handler.EntityResolver": "class xml.sax.handler.EntityResolver"
}