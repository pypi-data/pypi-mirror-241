{
 "ssl.RAND_bytes": "ssl.RAND_bytes(num)",
 "ssl.create_default_context": "ssl.create_default_context(purpose=Purpose.SERVER_AUTH, cafile=None, capath=None, cadata=None)",
 "ssl.RAND_pseudo_bytes": "ssl.RAND_pseudo_bytes(num)",
 "ssl.AlertDescription": "class ssl.AlertDescription",
 "ssl.RAND_status": "ssl.RAND_status()",
 "ssl.enum_certificates": "ssl.enum_certificates(store_name)",
 "ssl.get_default_verify_paths": "ssl.get_default_verify_paths()",
 "ssl.SSLSession": "class ssl.SSLSession",
 "ssl.RAND_add": "ssl.RAND_add(bytes, entropy)",
 "ssl.cert_time_to_seconds": "ssl.cert_time_to_seconds(cert_time)",
 "ssl.PEM_cert_to_DER_cert": "ssl.PEM_cert_to_DER_cert(PEM_cert_string)",
 "ssl.VerifyMode": "class ssl.VerifyMode",
 "ssl.MemoryBIO": "class ssl.MemoryBIO",
 "ssl.SSLErrorNumber": "class ssl.SSLErrorNumber",
 "ssl.get_server_certificate": "ssl.get_server_certificate(addr, ssl_version=PROTOCOL_TLS_CLIENT, ca_certs=None[, timeout])",
 "ssl.SSLContext": "class ssl.SSLContext(protocol=None)",
 "ssl.SSLSocket": "class ssl.SSLSocket(socket.socket)",
 "ssl.SSLObject": "class ssl.SSLObject",
 "ssl.enum_crls": "ssl.enum_crls(store_name)",
 "ssl.Options": "class ssl.Options",
 "ssl.match_hostname": "ssl.match_hostname(cert, hostname)",
 "ssl.TLSVersion": "class ssl.TLSVersion",
 "ssl.VerifyFlags": "class ssl.VerifyFlags",
 "ssl.wrap_socket": "ssl.wrap_socket(sock, keyfile=None, certfile=None, server_side=False, cert_reqs=CERT_NONE, ssl_version=PROTOCOL_TLS, ca_certs=None, do_handshake_on_connect=True, suppress_ragged_eofs=True, ciphers=None)",
 "ssl.DER_cert_to_PEM_cert": "ssl.DER_cert_to_PEM_cert(DER_cert_bytes)"
}