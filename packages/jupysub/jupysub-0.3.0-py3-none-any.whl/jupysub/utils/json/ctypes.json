{
 "ctypes.DllCanUnloadNow": "ctypes.DllCanUnloadNow()",
 "ctypes.c_uint32": "class ctypes.c_uint32",
 "ctypes.c_float": "class ctypes.c_float",
 "ctypes.byref": "ctypes.byref(obj[, offset])",
 "ctypes.WinDLL": "class ctypes.WinDLL(name, mode=DEFAULT_MODE, handle=None, use_errno=False, use_last_error=False, winmode=None)",
 "ctypes.memset": "ctypes.memset(dst, c, count)",
 "ctypes.set_last_error": "ctypes.set_last_error(value)",
 "ctypes.LittleEndianStructure": "class ctypes.LittleEndianStructure(*args, **kw)",
 "ctypes.c_uint": "class ctypes.c_uint",
 "ctypes.c_ulong": "class ctypes.c_ulong",
 "ctypes.c_double": "class ctypes.c_double",
 "ctypes.c_short": "class ctypes.c_short",
 "ctypes.cast": "ctypes.cast(obj, type)",
 "ctypes.string_at": "ctypes.string_at(address, size=- 1)",
 "ctypes.c_ubyte": "class ctypes.c_ubyte",
 "ctypes._Pointer": "class ctypes._Pointer",
 "ctypes.c_char": "class ctypes.c_char",
 "ctypes.c_int8": "class ctypes.c_int8",
 "ctypes.util.find_library": "ctypes.util.find_library(name)",
 "ctypes.c_int16": "class ctypes.c_int16",
 "ctypes.CDLL": "class ctypes.CDLL(name, mode=DEFAULT_MODE, handle=None, use_errno=False, use_last_error=False, winmode=None)",
 "ctypes.c_byte": "class ctypes.c_byte",
 "ctypes.PYFUNCTYPE": "ctypes.PYFUNCTYPE(restype, *argtypes)",
 "ctypes.PyDLL": "class ctypes.PyDLL(name, mode=DEFAULT_MODE, handle=None)",
 "ctypes.get_errno": "ctypes.get_errno()",
 "ctypes.get_last_error": "ctypes.get_last_error()",
 "ctypes.LittleEndianUnion": "class ctypes.LittleEndianUnion(*args, **kw)",
 "ctypes.c_size_t": "class ctypes.c_size_t",
 "ctypes.c_long": "class ctypes.c_long",
 "ctypes.c_longdouble": "class ctypes.c_longdouble",
 "ctypes.c_ulonglong": "class ctypes.c_ulonglong",
 "ctypes.c_int64": "class ctypes.c_int64",
 "ctypes.set_errno": "ctypes.set_errno(value)",
 "ctypes.c_wchar": "class ctypes.c_wchar",
 "ctypes.memmove": "ctypes.memmove(dst, src, count)",
 "ctypes.WinError": "ctypes.WinError(code=None, descr=None)",
 "ctypes.CFUNCTYPE": "ctypes.CFUNCTYPE(restype, *argtypes, use_errno=False, use_last_error=False)",
 "ctypes.c_ushort": "class ctypes.c_ushort",
 "ctypes.c_uint8": "class ctypes.c_uint8",
 "ctypes.c_int32": "class ctypes.c_int32",
 "ctypes.HRESULT": "class ctypes.HRESULT",
 "ctypes.BigEndianUnion": "class ctypes.BigEndianUnion(*args, **kw)",
 "ctypes.c_wchar_p": "class ctypes.c_wchar_p",
 "ctypes.Union": "class ctypes.Union(*args, **kw)",
 "ctypes.FormatError": "ctypes.FormatError([code])",
 "ctypes.c_char_p": "class ctypes.c_char_p",
 "ctypes.BigEndianStructure": "class ctypes.BigEndianStructure(*args, **kw)",
 "ctypes.Structure": "class ctypes.Structure(*args, **kw)",
 "ctypes.WINFUNCTYPE": "ctypes.WINFUNCTYPE(restype, *argtypes, use_errno=False, use_last_error=False)",
 "ctypes.c_longlong": "class ctypes.c_longlong",
 "ctypes.util.find_msvcrt": "ctypes.util.find_msvcrt()",
 "ctypes.addressof": "ctypes.addressof(obj)",
 "ctypes.Array": "class ctypes.Array(*args)",
 "ctypes.create_string_buffer": "ctypes.create_string_buffer(init_or_size, size=None)",
 "ctypes.sizeof": "ctypes.sizeof(obj_or_type)",
 "ctypes.resize": "ctypes.resize(obj, size)",
 "ctypes.c_uint16": "class ctypes.c_uint16",
 "ctypes._SimpleCData": "class ctypes._SimpleCData",
 "ctypes.c_bool": "class ctypes.c_bool",
 "ctypes.c_uint64": "class ctypes.c_uint64",
 "ctypes.GetLastError": "ctypes.GetLastError()",
 "ctypes.alignment": "ctypes.alignment(obj_or_type)",
 "ctypes.DllGetClassObject": "ctypes.DllGetClassObject()",
 "ctypes.c_ssize_t": "class ctypes.c_ssize_t",
 "ctypes.wstring_at": "ctypes.wstring_at(address, size=- 1)",
 "ctypes._FuncPtr": "class ctypes._FuncPtr",
 "ctypes.create_unicode_buffer": "ctypes.create_unicode_buffer(init_or_size, size=None)",
 "ctypes.c_void_p": "class ctypes.c_void_p",
 "ctypes._CData": "class ctypes._CData",
 "ctypes.LibraryLoader": "class ctypes.LibraryLoader(dlltype)",
 "ctypes.OleDLL": "class ctypes.OleDLL(name, mode=DEFAULT_MODE, handle=None, use_errno=False, use_last_error=False, winmode=None)",
 "ctypes.c_int": "class ctypes.c_int",
 "ctypes.POINTER": "ctypes.pointer(obj, /)",
 "ctypes.py_object": "class ctypes.py_object"
}