{
 "inspect.iscode": "inspect.iscode(object)",
 "inspect.iscoroutinefunction": "inspect.iscoroutinefunction(object)",
 "inspect.getframeinfo": "inspect.getframeinfo(frame, context=1)",
 "inspect.isroutine": "inspect.isroutine(object)",
 "inspect.ismemberdescriptor": "inspect.ismemberdescriptor(object)",
 "inspect.getsource": "inspect.getsource(object)",
 "inspect.getcoroutinestate": "inspect.getcoroutinestate(coroutine)",
 "inspect.getfile": "inspect.getfile(object)",
 "inspect.signature": "class inspect.Signature(parameters=None, *, return_annotation=Signature.empty)",
 "inspect.FrameInfo": "class inspect.FrameInfo",
 "inspect.getsourcelines": "inspect.getsourcelines(object)",
 "inspect.isabstract": "inspect.isabstract(object)",
 "inspect.getclosurevars": "inspect.getclosurevars(func)",
 "inspect.isasyncgenfunction": "inspect.isasyncgenfunction(object)",
 "inspect.ismodule": "inspect.ismodule(object)",
 "inspect.getmodule": "inspect.getmodule(object)",
 "inspect.getclasstree": "inspect.getclasstree(classes, unique=False)",
 "inspect.getmodulename": "inspect.getmodulename(path)",
 "inspect.Parameter": "class inspect.Parameter(name, kind, *, default=Parameter.empty, annotation=Parameter.empty)",
 "inspect.ismethodwrapper": "inspect.ismethodwrapper(object)",
 "inspect.getinnerframes": "inspect.getinnerframes(traceback, context=1)",
 "inspect.isframe": "inspect.isframe(object)",
 "inspect.getmembers": "inspect.getmembers(object[, predicate])",
 "inspect.get_annotations": "inspect.get_annotations(obj, *, globals=None, locals=None, eval_str=False)",
 "inspect.getargvalues": "inspect.getargvalues(frame)",
 "inspect.getdoc": "inspect.getdoc(object)",
 "inspect.trace": "inspect.trace(context=1)",
 "inspect.isfunction": "inspect.isfunction(object)",
 "inspect.istraceback": "inspect.istraceback(object)",
 "inspect.getgeneratorstate": "inspect.getgeneratorstate(generator)",
 "inspect.stack": "inspect.stack(context=1)",
 "inspect.getcoroutinelocals": "inspect.getcoroutinelocals(coroutine)",
 "inspect.getfullargspec": "inspect.getfullargspec(func)",
 "inspect.getcomments": "inspect.getcomments(object)",
 "inspect.getmembers_static": "inspect.getmembers_static(object[, predicate])",
 "inspect.isdatadescriptor": "inspect.isdatadescriptor(object)",
 "inspect.cleandoc": "inspect.cleandoc(doc)",
 "inspect.getsourcefile": "inspect.getsourcefile(object)",
 "inspect.isgenerator": "inspect.isgenerator(object)",
 "inspect.ismethoddescriptor": "inspect.ismethoddescriptor(object)",
 "inspect.isgetsetdescriptor": "inspect.isgetsetdescriptor(object)",
 "inspect.getmro": "inspect.getmro(cls)",
 "inspect.isawaitable": "inspect.isawaitable(object)",
 "inspect.isclass": "inspect.isclass(object)",
 "inspect.isasyncgen": "inspect.isasyncgen(object)",
 "inspect.isgeneratorfunction": "inspect.isgeneratorfunction(object)",
 "inspect.unwrap": "inspect.unwrap(func, *, stop=None)",
 "inspect.getgeneratorlocals": "inspect.getgeneratorlocals(generator)",
 "inspect.getcallargs": "inspect.getcallargs(func, /, *args, **kwds)",
 "inspect.Traceback": "class inspect.Traceback",
 "inspect.currentframe": "inspect.currentframe()",
 "inspect.getouterframes": "inspect.getouterframes(frame, context=1)",
 "inspect.formatargvalues": "inspect.formatargvalues(args[, varargs, varkw, locals, formatarg, formatvarargs, formatvarkw, formatvalue])",
 "inspect.ismethod": "inspect.ismethod(object)",
 "inspect.BoundArguments": "class inspect.BoundArguments",
 "inspect.isbuiltin": "inspect.isbuiltin(object)",
 "inspect.iscoroutine": "inspect.iscoroutine(object)",
 "inspect.getattr_static": "inspect.getattr_static(obj, attr, default=None)"
}