{
 "email.policy.EmailPolicy": "class email.policy.EmailPolicy(**kw)",
 "email.charset.add_charset": "email.charset.add_charset(charset, header_enc=None, body_enc=None, output_charset=None)",
 "email.header.make_header": "email.header.make_header(decoded_seq, maxlinelen=None, header_name=None, continuation_ws=' ')",
 "email.policy.Compat32": "class email.policy.Compat32(**kw)",
 "email.iterators._structure": "email.iterators._structure(msg, fp=None, level=0, include_default=False)",
 "email.parser.FeedParser": "class email.parser.FeedParser(_factory=None, *, policy=policy.compat32)",
 "email.headerregistry.ParameterizedMIMEHeader": "class email.headerregistry.ParameterizedMIMEHeader",
 "email.mime.application.MIMEApplication": "class email.mime.application.MIMEApplication(_data, _subtype='octet-stream', _encoder=email.encoders.encode_base64, *, policy=compat32, **_params)",
 "email.headerregistry.SingleAddressHeader": "class email.headerregistry.SingleAddressHeader",
 "email.utils.unquote": "email.utils.unquote(str)",
 "email.generator.BytesGenerator": "class email.generator.BytesGenerator(outfp, mangle_from_=None, maxheaderlen=None, *, policy=None)",
 "email.utils.formatdate": "email.utils.formatdate(timeval=None, localtime=False, usegmt=False)",
 "email.utils.formataddr": "email.utils.formataddr(pair, charset='utf-8')",
 "email.headerregistry.Address": "class email.headerregistry.Address(display_name='', username='', domain='', addr_spec=None)",
 "email.generator.DecodedGenerator": "class email.generator.DecodedGenerator(outfp, mangle_from_=None, maxheaderlen=None, fmt=None, *, policy=None)",
 "email.encoders.encode_7or8bit": "email.encoders.encode_7or8bit(msg)",
 "email.mime.nonmultipart.MIMENonMultipart": "class email.mime.nonmultipart.MIMENonMultipart",
 "email.iterators.typed_subpart_iterator": "email.iterators.typed_subpart_iterator(msg, maintype='text', subtype=None)",
 "email.iterators.body_line_iterator": "email.iterators.body_line_iterator(msg, decode=False)",
 "email.message_from_binary_file": "email.message_from_binary_file(fp, _class=None, *, policy=policy.compat32)",
 "email.contentmanager.ContentManager": "class email.contentmanager.ContentManager",
 "email.headerregistry.Group": "class email.headerregistry.Group(display_name=None, addresses=None)",
 "email.mime.message.MIMEMessage": "class email.mime.message.MIMEMessage(_msg, _subtype='rfc822', *, policy=compat32)",
 "email.utils.localtime": "email.utils.localtime(dt=None)",
 "email.headerregistry.ContentTransferEncoding": "class email.headerregistry.ContentTransferEncoding",
 "email.mime.audio.MIMEAudio": "class email.mime.audio.MIMEAudio(_audiodata, _subtype=None, _encoder=email.encoders.encode_base64, *, policy=compat32, **_params)",
 "email.message_from_file": "email.message_from_file(fp, _class=None, *, policy=policy.compat32)",
 "email.parser.Parser": "class email.parser.Parser(_class=None, *, policy=policy.compat32)",
 "email.header.Header": "class email.header.Header(s=None, charset=None, maxlinelen=None, header_name=None, continuation_ws=' ', errors='strict')",
 "email.utils.parsedate_tz": "email.utils.parsedate_tz(date)",
 "email.charset.add_alias": "email.charset.add_alias(alias, canonical)",
 "email.encoders.encode_quopri": "email.encoders.encode_quopri(msg)",
 "email.mime.multipart.MIMEMultipart": "class email.mime.multipart.MIMEMultipart(_subtype='mixed', boundary=None, _subparts=None, *, policy=compat32, **_params)",
 "email.utils.decode_rfc2231": "email.utils.decode_rfc2231(s)",
 "email.mime.image.MIMEImage": "class email.mime.image.MIMEImage(_imagedata, _subtype=None, _encoder=email.encoders.encode_base64, *, policy=compat32, **_params)",
 "email.utils.make_msgid": "email.utils.make_msgid(idstring=None, domain=None)",
 "email.headerregistry.UnstructuredHeader": "class email.headerregistry.UnstructuredHeader",
 "email.utils.collapse_rfc2231_value": "email.utils.collapse_rfc2231_value(value, errors='replace', fallback_charset='us-ascii')",
 "email.utils.encode_rfc2231": "email.utils.encode_rfc2231(s, charset=None, language=None)",
 "email.message_from_bytes": "email.message_from_bytes(s, _class=None, *, policy=policy.compat32)",
 "email.message.Message": "class email.message.Message(policy=compat32)",
 "email.mime.text.MIMEText": "class email.mime.text.MIMEText(_text, _subtype='plain', _charset=None, *, policy=compat32)",
 "email.encoders.encode_base64": "email.encoders.encode_base64(msg)",
 "email.charset.add_codec": "email.charset.add_codec(charset, codecname)",
 "email.utils.mktime_tz": "email.utils.mktime_tz(tuple)",
 "email.headerregistry.MIMEVersionHeader": "class email.headerregistry.MIMEVersionHeader",
 "email.mime.base.MIMEBase": "class email.mime.base.MIMEBase(_maintype, _subtype, *, policy=compat32, **_params)",
 "email.parser.BytesParser": "class email.parser.BytesParser(_class=None, *, policy=policy.compat32)",
 "email.message_from_string": "email.message_from_string(s, _class=None, *, policy=policy.compat32)",
 "email.utils.format_datetime": "email.utils.format_datetime(dt, usegmt=False)",
 "email.parser.BytesHeaderParser": "class email.parser.BytesHeaderParser(_class=None, *, policy=policy.compat32)",
 "email.utils.getaddresses": "email.utils.getaddresses(fieldvalues)",
 "email.headerregistry.HeaderRegistry": "class email.headerregistry.HeaderRegistry(base_class=BaseHeader, default_class=UnstructuredHeader, use_default_map=True)",
 "email.utils.parseaddr": "email.utils.parseaddr(address)",
 "email.utils.parsedate_to_datetime": "email.utils.parsedate_to_datetime(date)",
 "email.headerregistry.BaseHeader": "class email.headerregistry.BaseHeader(name, value)",
 "email.headerregistry.AddressHeader": "class email.headerregistry.AddressHeader",
 "email.utils.quote": "email.utils.quote(str)",
 "email.charset.Charset": "class email.charset.Charset(input_charset=DEFAULT_CHARSET)",
 "email.headerregistry.ContentDispositionHeader": "class email.headerregistry.ContentDispositionHeader",
 "email.utils.decode_params": "email.utils.decode_params(params)",
 "email.parser.BytesFeedParser": "class email.parser.BytesFeedParser(_factory=None, *, policy=policy.compat32)",
 "email.headerregistry.ContentTypeHeader": "class email.headerregistry.ContentTypeHeader",
 "email.headerregistry.DateHeader": "class email.headerregistry.DateHeader",
 "email.parser.HeaderParser": "class email.parser.HeaderParser(_class=None, *, policy=policy.compat32)",
 "email.generator.Generator": "class email.generator.Generator(outfp, mangle_from_=None, maxheaderlen=None, *, policy=None)",
 "email.header.decode_header": "email.header.decode_header(header)",
 "email.policy.Policy": "class email.policy.Policy(**kw)",
 "email.message.EmailMessage": "class email.message.EmailMessage(policy=default)",
 "email.message.MIMEPart": "class email.message.MIMEPart(policy=default)",
 "email.encoders.encode_noop": "email.encoders.encode_noop(msg)",
 "email.utils.parsedate": "email.utils.parsedate(date)"
}