{
 "random.seed": "random.seed(a=None, version=2)",
 "random.paretovariate": "random.paretovariate(alpha)",
 "random.SystemRandom": "class random.SystemRandom([seed])",
 "random.getstate": "random.getstate()",
 "random.randint": "random.randint(a, b)",
 "random.choices": "random.choices(population, weights=None, *, cum_weights=None, k=1)",
 "random.weibullvariate": "random.weibullvariate(alpha, beta)",
 "random.getrandbits": "random.getrandbits(k)",
 "random.lognormvariate": "random.lognormvariate(mu, sigma)",
 "random.expovariate": "random.expovariate(lambd)",
 "random.random": "class random.Random([seed])",
 "random.betavariate": "random.betavariate(alpha, beta)",
 "random.randbytes": "random.randbytes(n)",
 "random.sample": "random.sample(population, k, *, counts=None)",
 "random.vonmisesvariate": "random.vonmisesvariate(mu, kappa)",
 "random.setstate": "random.setstate(state)",
 "random.randrange": "random.randrange(stop)",
 "random.triangular": "random.triangular(low, high, mode)",
 "random.choice": "random.choice(seq)",
 "random.normalvariate": "random.normalvariate(mu=0.0, sigma=1.0)",
 "random.gammavariate": "random.gammavariate(alpha, beta)",
 "random.uniform": "random.uniform(a, b)",
 "random.gauss": "random.gauss(mu=0.0, sigma=1.0)",
 "random.shuffle": "random.shuffle(x)"
}