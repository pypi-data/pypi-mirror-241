"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Adds another ESXi host to an existing SDDC. The attributes of the
specified *Sddc* determine the VMware software and other configuration
settings used by the ESXi host.

Use the WorkRequest operations to track the creation of the ESXi host.


Usage
=====

   oci ocvs esxi-host create [OPTIONS]


Required Parameters
===================

--sddc-id [text]

The OCID of the SDDC to add the ESXi host to.


Optional Parameters
===================

--billing-donor-host-id [text]

The OCID of the deleted ESXi Host with LeftOver billing cycle.

--capacity-reservation-id [text]

The OCID of the Capacity Reservation.

--compute-availability-domain [text]

The availability domain to create the ESXi host in. If keep empty, for
AD-specific SDDC, new ESXi host will be created in the same
availability domain; for multi-AD SDDC, new ESXi host will be auto
assigned to the next availability domain following evenly distribution
strategy.

--current-sku [text]

The billing option currently used by the ESXi host. ListSupportedSkus.

Accepted values are:

   HOUR, MONTH, ONE_YEAR, THREE_YEARS

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name, --name [text]

A descriptive name for the ESXi host. It’s changeable. Esxi Host name
requirements are 1-16 character length limit, Must start with a
letter, Must be English letters, numbers, - only, No repeating
hyphens, Must be unique within the SDDC.

If this attribute is not specified, the SDDC’s
*instanceDisplayNamePrefix* attribute is used to name and
incrementally number the ESXi host. For example, if you’re creating
the fourth ESXi host in the SDDC, and *instanceDisplayNamePrefix* is
*MySDDC*, the host’s display name is *MySDDC-4*.

Avoid entering confidential information.

--failed-esxi-host-id [text]

The OCID of the ESXi host that is failed. This is an optional
parameter. If this parameter is specified, a new ESXi host will be
created to replace the failed one, and the *failedEsxiHostId* field
will be updated in the newly created Esxi host.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--host-ocpu-count [float]

The OCPU count of the ESXi host.

--host-shape-name [text]

The compute shape name of the ESXi host. ListSupportedHostShapes.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--next-sku [text]

The billing option to switch to after the existing billing cycle ends.
If *nextSku* is null or empty, *currentSku* continues to the next
billing cycle. ListSupportedSkus.

Accepted values are:

   HOUR, MONTH, ONE_YEAR, THREE_YEARS

--non-upgraded-esxi-host-id [text]

The OCID of the ESXi host that will be upgraded. This is an optional
parameter. If this parameter is specified, an ESXi host with the new
software version is created to replace the original one, and the
*nonUpgradedEsxiHostId* field is updated in the newly created Esxi
host. See Upgrading VMware Software for more information.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-compartment-id
       export compute_availability_domain=<substitute-value-of-compute_availability_domain> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-compute-availability-domain
       export esxi_count=<substitute-value-of-esxi_count> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-esxi-count
       export instance_prefix=<substitute-value-of-instance_prefix> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-instance-prefix
       export nsx_edge_up1_id=<substitute-value-of-nsx_edge_up1_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-nsx-edge-up1-id
       export nsx_edge_up2_id=<substitute-value-of-nsx_edge_up2_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-nsx-edge-up2-id
       export nsx_edge_vtep_id=<substitute-value-of-nsx_edge_vtep_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-nsx-edge-vtep-id
       export nsx_vtep_id=<substitute-value-of-nsx_vtep_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-nsx-vtep-id
       export prov_subnet_id=<substitute-value-of-prov_subnet_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-prov-subnet-id
       export ssh_authorized_keys=<substitute-value-of-ssh_authorized_keys> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-ssh-authorized-keys
       export vmotion_id=<substitute-value-of-vmotion_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-vmotion-id
       export vmware_version=<substitute-value-of-vmware_version> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-vmware-version
       export vsan_id=<substitute-value-of-vsan_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-vsan-id
       export vsphere_id=<substitute-value-of-vsphere_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-vsphere-id

       sddc_id=$(oci ocvs sddc create --compartment-id $compartment_id --compute-availability-domain $compute_availability_domain --esxi-count $esxi_count --instance-prefix $instance_prefix --nsx-edge-up1-id $nsx_edge_up1_id --nsx-edge-up2-id $nsx_edge_up2_id --nsx-edge-vtep-id $nsx_edge_vtep_id --nsx-vtep-id $nsx_vtep_id --prov-subnet-id $prov_subnet_id --ssh-authorized-keys $ssh_authorized_keys --vmotion-id $vmotion_id --vmware-version $vmware_version --vsan-id $vsan_id --vsphere-id $vsphere_id --query data.id --raw-output)

       oci ocvs esxi-host create --sddc-id $sddc_id
