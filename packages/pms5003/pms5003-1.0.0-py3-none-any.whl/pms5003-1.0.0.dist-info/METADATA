Metadata-Version: 2.1
Name: pms5003
Version: 1.0.0
Summary: PMS5003 Particulate Sensor
Project-URL: GitHub, https://www.github.com/pimoroni/pms5003-python
Project-URL: Homepage, https://www.pimoroni.com
Author-email: Philip Howard <phil@pimoroni.com>
Maintainer-email: Philip Howard <phil@pimoroni.com>
License: MIT License
        
        Copyright (c) 2018 Pimoroni Ltd.
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: Pi,Raspberry
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: System :: Hardware
Requires-Python: >=3.7
Requires-Dist: gpiod
Requires-Dist: gpiodevice
Requires-Dist: pyserial
Description-Content-Type: text/markdown

# PMS5003 Particulate Sensor

[![Build Status](https://travis-ci.com/pimoroni/pms5003-python.svg?branch=master)](https://travis-ci.com/pimoroni/pms5003-python)
[![Coverage Status](https://coveralls.io/repos/github/pimoroni/pms5003-python/badge.svg?branch=master)](https://coveralls.io/github/pimoroni/pms5003-python?branch=master)
[![PyPi Package](https://img.shields.io/pypi/v/pms5003.svg)](https://pypi.python.org/pypi/pms5003)
[![Python Versions](https://img.shields.io/pypi/pyversions/pms5003.svg)](https://pypi.python.org/pypi/pms5003)

# Installing

Stable library from PyPi:

* Just run `sudo pip install pms5003`

Latest/development library from GitHub:

* `git clone https://github.com/pimoroni/pms5003-python`
* `cd pms5003-python`
* `sudo ./install.sh`

# Requirements

The serial port on your Raspberry Pi must be enabled:

```
# Disable serial terminal over /dev/ttyAMA0
sudo raspi-config nonint do_serial 1

# Enable serial port
raspi-config nonint set_config_var enable_uart 1 /boot/config.txt
```

And additionally be using a full UART (versus the default miniUART):

Add the line `dtoverlay=pi3-miniuart-bt` to your `/boot/config.txt`

This will switch Bluetooth over to miniUART, see https://www.raspberrypi.org/documentation/configuration/uart.md for more details.

1.0.0
-----

* Repackage to hatch/pyproject.toml
* Port to gpiod/gpiodevice (away from RPi.GPIO)

0.0.5
-----

* BugFix: Read start-of-frame a byte at a time to avoid misalignment issues, potential fix for #2, #3 and #4
* Enhancement: Clarified error message when length packet cannot be read
* Enhancement: Clarified error message when start of frame cannot be read
* Enhancement: Added new error message where raw data length is less than expected (frame length)

0.0.4
-----

* Packaging improvements/bugfix from boilerplate

0.0.3
-----

* Added pyserial dependency

0.0.2
-----

* Added reset function

0.0.1
-----

* Initial Release
