{"version":3,"file":"static/js/9897.41e3a465.chunk.js","mappings":"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","sources":["data/axios.js","components/SplitButton.jsx","pages/schedule.jsx"],"sourcesContent":["import axiosLib from \"axios\";\nimport { enqueueSnackbar } from \"notistack\";\n\nexport const axios = () => {\n  const caxios = axiosLib.create({\n    xsrfCookieName: \"csrftoken\",\n    xsrfHeaderName: \"X-CSRFToken\",\n  });\n\n  caxios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if (\n        !window.location.pathname.startsWith(\"/s/\") &&\n        !window.location.pathname.startsWith(\"/hub\") &&\n        !window.location.pathname.startsWith(\"/app/\") &&\n        (error.response.status === 401 || error.response.status === 403)\n      ) {\n        window.location.href = \"/login?redirectUrl=\" + window.location.pathname;\n      }\n\n      try {\n        enqueueSnackbar(\"Error Occurred\", { variant: \"error\" });\n      } catch (e) {\n        // Ignore\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  return caxios;\n};\n","import React, { useState, useRef } from \"react\";\nimport {\n  ButtonGroup,\n  Button,\n  Popper,\n  Grow,\n  Paper,\n  ClickAwayListener,\n  MenuList,\n  MenuItem,\n} from \"@mui/material\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\n\nexport default function SplitButton({ options, sx }) {\n  const [open, setOpen] = useState(false);\n  const anchorRef = useRef(null);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  const handleClick = () => {\n    options[selectedIndex].onClick();\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <ButtonGroup\n        variant=\"contained\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        sx={sx}\n      >\n        <Button onClick={handleClick}>{options[selectedIndex].title}</Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        sx={{\n          zIndex: 50,\n        }}\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\" autoFocusItem>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option.key}\n                      disabled={options?.isDisabled === true}\n                      selected={index === selectedIndex}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option.title}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Pagination,\n  IconButton,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  Box,\n  Chip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@mui/material\";\n\nimport { axios } from \"../data/axios\";\nimport DeleteOutlineOutlinedIcon from \"@mui/icons-material/DeleteOutlineOutlined\";\nimport PauseCircleOutlinedIcon from \"@mui/icons-material/PauseCircleOutlined\";\nimport PlayCircleOutlinedIcon from \"@mui/icons-material/PlayCircleOutlined\";\nimport { enqueueSnackbar } from \"notistack\";\n\nimport SplitButton from \"../components/SplitButton\";\n\nfunction ConfirmationModal(props) {\n  const { open, onOk, onCancel, title, text } = props;\n  return (\n    <Dialog\n      title={title ? title : \"Logged Out\"}\n      open={open}\n      onCancel={onCancel}\n    >\n      <DialogTitle id=\"delete-modal-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button key=\"cancel\" onClick={onCancel}>\n          Cancel\n        </Button>\n        ,\n        <Button key=\"submit\" variant=\"contained\" type=\"primary\" onClick={onOk}>\n          Confirm\n        </Button>\n        ,\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction ActionModal({ modalType, open, onCancel, onOk, jobId }) {\n  function deleteAppRunJob() {\n    axios()\n      .delete(`/api/jobs/${jobId}`)\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((err) => {\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      })\n      .finally(() => {\n        onOk();\n      });\n  }\n  function pauseAppRunJob() {\n    axios()\n      .post(`/api/jobs/${jobId}/pause`)\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((err) => {\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      })\n      .finally(() => {\n        onOk();\n      });\n  }\n\n  const resumeAppRunJob = () => {\n    axios()\n      .post(`/api/jobs/${jobId}/resume`)\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((err) => {\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      })\n      .finally(() => {\n        onOk();\n      });\n  };\n\n  switch (modalType) {\n    case \"delete\":\n      // Show a delete confirmation modal\n      return (\n        <ConfirmationModal\n          id=\"delete-job\"\n          open={open}\n          onOk={deleteAppRunJob}\n          onCancel={onCancel}\n          title=\"Delete Job\"\n          text=\"Are you sure you want to delete this job?\"\n        />\n      );\n    case \"pause\":\n      return (\n        <ConfirmationModal\n          id=\"pause-job\"\n          open={open}\n          onOk={pauseAppRunJob}\n          onCancel={onCancel}\n          title=\"Pause Job\"\n          text=\"Are you sure you want to pause this job?\"\n        />\n      );\n    case \"resume\":\n      return (\n        <ConfirmationModal\n          id=\"resume-job\"\n          open={open}\n          onOk={resumeAppRunJob}\n          onCancel={onCancel}\n          title=\"Resume Job\"\n          text=\"Are you sure you want to resume this job?\"\n        />\n      );\n    default:\n      return null;\n  }\n}\n\nexport default function Schedule() {\n  const [pageNumber, setPageNumber] = useState(1);\n  const [scheduledJobs, setScheduledJobs] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [jobId, setJobId] = useState(null);\n\n  const modalCancelCb = () => {\n    setModalType(null);\n    setJobId(null);\n    setModalOpen(false);\n  };\n\n  const columnData = [\n    {\n      title: \"Name\",\n      key: \"name\",\n    },\n    {\n      title: \"Type\",\n      key: \"model\",\n      render: (record, row) => {\n        const getJobTypeTitle = () => {\n          switch (record) {\n            case \"ScheduledJob\":\n              return \"Scheduled Job\";\n            case \"RepeatableJob\":\n              return \"Repeatable Job\";\n            case \"CronJob\":\n              return \"Cron Job\";\n            default:\n              return null;\n          }\n        };\n        const getJobCategoryTitle = () => {\n          switch (row?.task_category) {\n            case \"app_run\":\n              return \"Application Run\";\n            case \"datasource_refresh\":\n              return \"Datasource Refresh\";\n            default:\n              return null;\n          }\n        };\n        return (\n          <div>\n            <Chip label={getJobCategoryTitle()} color=\"primary\" />\n            <Chip label={getJobTypeTitle()} color=\"secondary\" />\n          </div>\n        );\n      },\n    },\n    {\n      title: \"Status\",\n      key: \"enabled\",\n      render: (record, row) => {\n        return row ? (\n          <Chip label=\"Enabled\" color=\"success\" />\n        ) : (\n          <Chip label=\"Disabled\" color=\"error\" />\n        );\n      },\n    },\n    {\n      title: \"Action\",\n      key: \"operation\",\n      render: (record, row) => {\n        return (\n          <Box>\n            {row?.model !== \"ScheduledJob\" ? (\n              row?.enabled ? (\n                <IconButton\n                  onClick={() => {\n                    setJobId(row.uuid);\n                    setModalType(\"pause\");\n                    setModalOpen(true);\n                  }}\n                  color=\"primary\"\n                >\n                  <PauseCircleOutlinedIcon />\n                </IconButton>\n              ) : (\n                <IconButton\n                  onClick={() => {\n                    setJobId(row.uuid);\n                    setModalType(\"resume\");\n                    setModalOpen(true);\n                  }}\n                  color=\"primary\"\n                >\n                  <PlayCircleOutlinedIcon />\n                </IconButton>\n              )\n            ) : null}\n            <IconButton\n              onClick={() => {\n                setJobId(row.uuid);\n                setModalType(\"delete\");\n                setModalOpen(true);\n              }}\n              color=\"primary\"\n            >\n              <DeleteOutlineOutlinedIcon />\n            </IconButton>\n          </Box>\n        );\n      },\n    },\n  ];\n\n  useEffect(() => {\n    axios()\n      .get(\"/api/jobs\")\n      .then((res) => {\n        setScheduledJobs(res.data);\n      });\n  }, []);\n\n  return (\n    <div id=\"schedule-page\" style={{ marginBottom: \"120px\" }}>\n      <Grid span={24} style={{ padding: \"10px\" }}>\n        <Grid item style={{ width: \"100%\", padding: \"15px 0px\" }}>\n          <SplitButton\n            options={[\n              {\n                key: 1,\n                title: \"Application Run\",\n                onClick: () => {\n                  window.location.href = \"/schedule/add_app_run\";\n                },\n              },\n              {\n                key: 2,\n                title: \"Datasource Refresh\",\n                onClick: () => {\n                  window.location.href = \"/schedule/add_datasource_refresh\";\n                },\n              },\n            ]}\n            sx={{ float: \"left\", marginBottom: \"10px\", textTransform: \"none\" }}\n          />\n        </Grid>\n        <Grid item style={{ width: \"100%\" }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columnData.map((column) => {\n                  return (\n                    <TableCell\n                      key={column.key}\n                      sx={{\n                        paddingLeft: column.key === \"name\" ? \"40px\" : \"inherit\",\n                      }}\n                    >\n                      <strong>{column.title}</strong>\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {scheduledJobs.map((row) => {\n                return (\n                  <TableRow\n                    key={row.uuid}\n                    sx={{ cursor: \"pointer\", backgroundColor: \"inherit\" }}\n                  >\n                    {columnData.map((column) => {\n                      const value = row[column.key];\n                      return (\n                        <TableCell\n                          key={column.key}\n                          align={column.align}\n                          sx={{ fontWeight: \"inherit\" }}\n                        >\n                          {column.render ? column.render(value, row) : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          {scheduledJobs.length > 0 && (\n            <Pagination\n              variant=\"outlined\"\n              shape=\"rounded\"\n              page={pageNumber}\n              onChange={(event, value) => {\n                setPageNumber(value);\n              }}\n              sx={{ marginTop: 2, float: \"right\" }}\n            />\n          )}\n        </Grid>\n      </Grid>\n      {modalOpen && (\n        <ActionModal\n          open={modalOpen}\n          modalType={modalType}\n          onCancel={modalCancelCb}\n          jobId={jobId}\n          onOk={modalCancelCb}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":["axios","caxios","axiosLib","create","xsrfCookieName","xsrfHeaderName","interceptors","response","use","error","window","location","pathname","startsWith","status","href","enqueueSnackbar","variant","e","Promise","reject","SplitButton","_ref","options","sx","_useState","useState","_useState2","_slicedToArray","open","setOpen","anchorRef","useRef","_useState3","_useState4","selectedIndex","setSelectedIndex","handleClose","event","current","contains","target","_jsxs","React","children","ButtonGroup","ref","_jsx","Button","onClick","title","size","undefined","prevOpen","ArrowDropDownIcon","Popper","zIndex","anchorEl","role","transition","disablePortal","_ref2","TransitionProps","placement","Grow","_objectSpread","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","map","option","index","MenuItem","disabled","isDisabled","selected","handleMenuItemClick","key","ConfirmationModal","props","onOk","onCancel","text","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","type","ActionModal","modalType","jobId","delete","concat","then","res","reload","catch","err","message","finally","post","Schedule","pageNumber","setPageNumber","scheduledJobs","setScheduledJobs","_useState5","_useState6","modalOpen","setModalOpen","_useState7","_useState8","setModalType","_useState9","_useState10","setJobId","modalCancelCb","columnData","render","record","row","Chip","label","task_category","getJobCategoryTitle","color","getJobTypeTitle","Box","model","enabled","IconButton","uuid","PauseCircleOutlinedIcon","PlayCircleOutlinedIcon","DeleteOutlineOutlinedIcon","useEffect","get","data","marginBottom","Grid","span","padding","item","width","float","textTransform","Table","stickyHeader","TableHead","TableRow","column","TableCell","paddingLeft","TableBody","cursor","backgroundColor","value","align","fontWeight","length","Pagination","shape","page","onChange","marginTop"],"sourceRoot":""}