# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _GrowCutPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFastGrowCutPython
else:
    import _itkFastGrowCutPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFastGrowCutPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFastGrowCutPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkFastGrowCutID3IUC3_New():
    return itkFastGrowCutID3IUC3.New()

class itkFastGrowCutID3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    r"""Proxy of C++ itkFastGrowCutID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_Clone)
    Reset = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_Reset)
    SetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_SetDistancePenalty)
    GetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_GetDistancePenalty)
    PrintSelf = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_PrintSelf)
    SetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_SetSeedImage)
    GetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_GetSeedImage)
    SetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_GetMaskImage)
    GenerateData = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_GenerateData)
    InputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutID3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutID3IUC3_OutputHasNumericTraitsCheck
    
    MaskHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutID3IUC3_MaskHasNumericTraitsCheck
    
    __swig_destroy__ = _itkFastGrowCutPython.delete_itkFastGrowCutID3IUC3
    cast = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkFastGrowCutID3IUC3

        Create a new object of the class itkFastGrowCutID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastGrowCutID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastGrowCutID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastGrowCutID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastGrowCutID3IUC3 in _itkFastGrowCutPython:
_itkFastGrowCutPython.itkFastGrowCutID3IUC3_swigregister(itkFastGrowCutID3IUC3)
itkFastGrowCutID3IUC3___New_orig__ = _itkFastGrowCutPython.itkFastGrowCutID3IUC3___New_orig__
itkFastGrowCutID3IUC3_cast = _itkFastGrowCutPython.itkFastGrowCutID3IUC3_cast


def itkFastGrowCutIF3IUC3_New():
    return itkFastGrowCutIF3IUC3.New()

class itkFastGrowCutIF3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    r"""Proxy of C++ itkFastGrowCutIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_Clone)
    Reset = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_Reset)
    SetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_SetDistancePenalty)
    GetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_GetDistancePenalty)
    PrintSelf = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_PrintSelf)
    SetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_SetSeedImage)
    GetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_GetSeedImage)
    SetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_GetMaskImage)
    GenerateData = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_GenerateData)
    InputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIF3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIF3IUC3_OutputHasNumericTraitsCheck
    
    MaskHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIF3IUC3_MaskHasNumericTraitsCheck
    
    __swig_destroy__ = _itkFastGrowCutPython.delete_itkFastGrowCutIF3IUC3
    cast = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkFastGrowCutIF3IUC3

        Create a new object of the class itkFastGrowCutIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastGrowCutIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastGrowCutIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastGrowCutIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastGrowCutIF3IUC3 in _itkFastGrowCutPython:
_itkFastGrowCutPython.itkFastGrowCutIF3IUC3_swigregister(itkFastGrowCutIF3IUC3)
itkFastGrowCutIF3IUC3___New_orig__ = _itkFastGrowCutPython.itkFastGrowCutIF3IUC3___New_orig__
itkFastGrowCutIF3IUC3_cast = _itkFastGrowCutPython.itkFastGrowCutIF3IUC3_cast


def itkFastGrowCutISS3IUC3_New():
    return itkFastGrowCutISS3IUC3.New()

class itkFastGrowCutISS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    r"""Proxy of C++ itkFastGrowCutISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_Clone)
    Reset = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_Reset)
    SetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_SetDistancePenalty)
    GetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_GetDistancePenalty)
    PrintSelf = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_PrintSelf)
    SetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_SetSeedImage)
    GetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_GetSeedImage)
    SetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_GetMaskImage)
    GenerateData = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_GenerateData)
    InputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutISS3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutISS3IUC3_OutputHasNumericTraitsCheck
    
    MaskHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutISS3IUC3_MaskHasNumericTraitsCheck
    
    __swig_destroy__ = _itkFastGrowCutPython.delete_itkFastGrowCutISS3IUC3
    cast = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkFastGrowCutISS3IUC3

        Create a new object of the class itkFastGrowCutISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastGrowCutISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastGrowCutISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastGrowCutISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastGrowCutISS3IUC3 in _itkFastGrowCutPython:
_itkFastGrowCutPython.itkFastGrowCutISS3IUC3_swigregister(itkFastGrowCutISS3IUC3)
itkFastGrowCutISS3IUC3___New_orig__ = _itkFastGrowCutPython.itkFastGrowCutISS3IUC3___New_orig__
itkFastGrowCutISS3IUC3_cast = _itkFastGrowCutPython.itkFastGrowCutISS3IUC3_cast


def itkFastGrowCutIUC3IUC3_New():
    return itkFastGrowCutIUC3IUC3.New()

class itkFastGrowCutIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkFastGrowCutIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_Clone)
    Reset = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_Reset)
    SetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_SetDistancePenalty)
    GetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_GetDistancePenalty)
    PrintSelf = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_PrintSelf)
    SetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_SetSeedImage)
    GetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_GetSeedImage)
    SetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_GetMaskImage)
    GenerateData = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_GenerateData)
    InputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_OutputHasNumericTraitsCheck
    
    MaskHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_MaskHasNumericTraitsCheck
    
    __swig_destroy__ = _itkFastGrowCutPython.delete_itkFastGrowCutIUC3IUC3
    cast = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkFastGrowCutIUC3IUC3

        Create a new object of the class itkFastGrowCutIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastGrowCutIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastGrowCutIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastGrowCutIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastGrowCutIUC3IUC3 in _itkFastGrowCutPython:
_itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_swigregister(itkFastGrowCutIUC3IUC3)
itkFastGrowCutIUC3IUC3___New_orig__ = _itkFastGrowCutPython.itkFastGrowCutIUC3IUC3___New_orig__
itkFastGrowCutIUC3IUC3_cast = _itkFastGrowCutPython.itkFastGrowCutIUC3IUC3_cast


def itkFastGrowCutIUS3IUC3_New():
    return itkFastGrowCutIUS3IUC3.New()

class itkFastGrowCutIUS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    r"""Proxy of C++ itkFastGrowCutIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_Clone)
    Reset = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_Reset)
    SetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_SetDistancePenalty)
    GetDistancePenalty = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_GetDistancePenalty)
    PrintSelf = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_PrintSelf)
    SetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_SetSeedImage)
    GetSeedImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_GetSeedImage)
    SetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_GetMaskImage)
    GenerateData = _swig_new_instance_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_GenerateData)
    InputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_OutputHasNumericTraitsCheck
    
    MaskHasNumericTraitsCheck = _itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_MaskHasNumericTraitsCheck
    
    __swig_destroy__ = _itkFastGrowCutPython.delete_itkFastGrowCutIUS3IUC3
    cast = _swig_new_static_method(_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkFastGrowCutIUS3IUC3

        Create a new object of the class itkFastGrowCutIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastGrowCutIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastGrowCutIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastGrowCutIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastGrowCutIUS3IUC3 in _itkFastGrowCutPython:
_itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_swigregister(itkFastGrowCutIUS3IUC3)
itkFastGrowCutIUS3IUC3___New_orig__ = _itkFastGrowCutPython.itkFastGrowCutIUS3IUC3___New_orig__
itkFastGrowCutIUS3IUC3_cast = _itkFastGrowCutPython.itkFastGrowCutIUS3IUC3_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def fast_grow_cut(*args: itkt.ImageLike,  distance_penalty: float=..., seed_image: itkt.Image=..., mask_image: itkt.Image=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FastGrowCut"""
    import itk

    kwarg_typehints = { 'distance_penalty':distance_penalty,'seed_image':seed_image,'mask_image':mask_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FastGrowCut.New(*args, **kwargs)

    return instance.__internal_call__()

def fast_grow_cut_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.GrowCut.FastGrowCut
    fast_grow_cut.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    fast_grow_cut.__doc__ = filter_object.__doc__




