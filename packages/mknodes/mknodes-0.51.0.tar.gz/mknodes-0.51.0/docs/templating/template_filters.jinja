The `jinja2` environment also contains some pre-defined filters.

!!! info
     The output gets passed to the first argument of the filter function.
     Filters are separated from the variable by a pipe symbol (|) and may have optional arguments in parentheses. Multiple filters can be chained. The output of one filter is applied to the next.


### `get_link`

Example:
```
"PageName" | get_link
```

::: mknodes.info.linkprovider.LinkProvider.get_link
    options:
      show_root_heading: false
      show_root_toc_entry: false

### `get_url`

Example:
```
"PageName" | get_url
```

::: mknodes.info.linkprovider.LinkProvider.get_url
    options:
      show_root_heading: false
      show_root_toc_entry: false

### `styled`

Example:
```
"My text" | styled(bold=True, align="right")
```

::: mknodes.utils.helpers.styled
    options:
      show_root_heading: false
      show_root_toc_entry: false


### `load_file`

Example:
```
"Path/to.file" | load_file
```

::: mknodes.utils.pathhelpers.load_file_cached
    options:
      show_root_heading: false
      show_root_toc_entry: false


### `dump_yaml`

Example:
```
{"a": "b"} | dump_yaml
```

::: mknodes.utils.yamlhelpers.dump_yaml
    options:
      show_root_heading: false
      show_root_toc_entry: false


### `load_yaml`

Example:
```
"site_name: MkNodes" | load_yaml
```

::: mknodes.utils.yamlhelpers.load_yaml
    options:
      show_root_heading: false
      show_root_toc_entry: false


**Additional filters from Python stdlib added to the environment**

* `str`
* `str.lstrip`
* `str.rstrip`
* `str.removesuffix`
* `str.removeprefix`
* `issubclass`
* `isinstance`
* `hasattr`
* `path_join (os.path.join)`
