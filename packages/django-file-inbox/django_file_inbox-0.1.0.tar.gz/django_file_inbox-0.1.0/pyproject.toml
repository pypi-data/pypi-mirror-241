[project]
name = "django-file-inbox"
version = "0.1.0"
authors = [
    { name = "Michael J. Nicholson", email = "michjnich@outlook.com" },
]
description = "Simple inbox for Django file-based EmailBackend"
dependencies = [
    "django~=4.0",
]
requires-python = ">=3.10,<4.0"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: Django",
]

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/michjnich/django-file-inbox"
"Issue Tracker" = "https://github.com/michjnich/django-file-inbox/issues"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
lint = [
    "ruff~=0.1.5",
]
dev = []
type = [
    "mypy~=1.7.0",
    "django-stubs~=4.2.6",
]

[tool.pdm.build]
includes = [
    "src/django_file_inbox",
]
excludes = [
    "src/templates/django_file_inbox/processed/*.html",
]

[tool.pdm.scripts]
format_check_cmd = "ruff format --check src"
format_fix_cmd = "ruff format src"
type_check_cmd = "mypy ./src"

[tool.pdm.scripts.lint_version]
cmd = "ruff --version"

[tool.pdm.scripts.lint_check_cmd]
shell = "ruff check src && echo 'No linting issues found'"

[tool.pdm.scripts.lint_fix_cmd]
shell = "ruff check --fix src && echo 'No linting issues found'"

[tool.pdm.scripts.format_version]
cmd = "ruff --version"

[tool.pdm.scripts.type_version]
cmd = "mypy --version"

[tool.pdm.scripts.check_format]
composite = [
    "format_version",
    "format_check_cmd",
]

[tool.pdm.scripts.check_lint]
composite = [
    "lint_version",
    "lint_check_cmd",
]

[tool.pdm.scripts.check_type]
composite = [
    "type_version",
    "type_check_cmd",
]

[tool.pdm.scripts.check]
composite = [
    "check_format",
    "check_lint",
    "check_type",
]

[tool.pdm.scripts.fix_format]
composite = [
    "format_version",
    "format_fix_cmd",
]

[tool.pdm.scripts.fix_lint]
composite = [
    "lint_version",
    "lint_fix_cmd",
]

[tool.pdm.scripts.fix]
composite = [
    "fix_format",
    "fix_lint",
]

[tool.ruff]
select = [
    "E",
    "F",
    "I",
    "C90",
    "N",
    "UP",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
    "PTH",
    "TD",
    "ERA",
    "PL",
    "TRY",
    "FLY",
    "PERF",
    "FURB",
    "LOG",
    "RUF",
]
ignore = [
    "TD002",
    "TD003",
    "RUF012",
    "ISC001",
]
fixable = [
    "ALL",
]
preview = true
line-length = 120
target-version = "py311"
src = [
    "src",
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    "S101",
    "ARG",
    "FBT",
]

[tool.ruff.format]

[tool.ruff.isort]
section-order = [
    "future",
    "pytest",
    "standard-library",
    "django",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.isort.sections]
django = [
    "django",
]
pytest = [
    "pytest",
    "pytest_django",
]
