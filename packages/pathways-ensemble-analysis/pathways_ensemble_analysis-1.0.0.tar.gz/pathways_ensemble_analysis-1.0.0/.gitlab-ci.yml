---
# This file is a template, and might need editing before it works on your project.

# Official language image. Look for the different tagged releases at:
# image: "python:2.7"

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service

# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

variables:
  CONDA_PKGS_DIRS: "$CI_PROJECT_DIR/.cache/conda-pkgs"



image: condaforge/mambaforge:latest

before_script:
  - source /opt/conda/etc/profile.d/conda.sh
  - mamba env create -f environment.yml
  - conda activate pea

after_script:
  - mamba clean -ip
  - rm -f $CONDA_PKG_DIRS/*.tar.bz2 # we don't need the tarballs (the extracted directories are good enough)

tests:
  stage: test
  script:
    - pytest

# Cache packages in between builds

# NOTE caching only works for stuff within the project directory,
# therefore the CONDA_PKGS_DIRS variable moves the conda pkg
# cache there. Refer to
# https://conda.io/projects/conda/en/latest/user-guide/configuration/use-condarc.html#specify-package-directories-pkgs-dirs and
# https://docs.gitlab.com/ee/ci/caching/ and the pip example in https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml
cache:
  paths:
    - .cache/conda-pkgs

# docs:
#   script:
#     - tox -e docs

#pages:
#  stage: deploy
#  script:
#  - sphinx-build -b html docs public
#  artifacts:
#    paths:
#    - public
#  only:
#  - main

# This deploy job uses a simple deploy flow to Heroku, other providers, e.g. AWS Elastic Beanstalk
# are supported too: https://github.com/travis-ci/dpl
#deploy:
#  type: deploy
#  environment: production
#  script:
#    - python setup.py
#    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_PRODUCTION_KEY
