[metadata]
name = Client_API_VN
description = Python API to Biolovision API and applications using it
author = Daniel Thonon
author_email = d.thonon9@gmail.com
license = gpl3
url = https://github.com/dthonon/Client_API_VN
project_urls = 
	Documentation = https://client-api-vn.readthedocs.io/en/latest/
	BugTracker = https://github.com/dthonon/Client_API_VN/issues
long_description = file: README.rst
long_description_content_type = text/x-rst
platforms = any
classifiers = 
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
	Operating System :: POSIX :: Linux
	Development Status :: 5 - Production/Stable
	Environment :: Console
	Topic :: Scientific/Engineering :: Bio-Informatics

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir = 
	=src
setup_requires = pyscaffold>=3.2a0,<3.3a0
install_requires = 
	alembic
	apscheduler==3.9.1.post1
	beautifulsoup4
	docutils
	jinja2
	jsonschema
	numpy
	psutil
	psycopg2-binary
	pyproj
	requests
	requests-oauthlib
	setuptools_scm
	SQLAlchemy<2
	strictyaml
	tabulate
	wheel
	towncrier
	xmltodict
	yappi
python_requires = >=3.7

[options.packages.find]
where = src
exclude = 
	tests

[options.package_data]
export_vn = 
	data/evn_template.yaml
	sql/create-vn-tables.sql
	locale/*/LC_MESSAGES/*.mo
schemas = 
	*.json

[options.extras_require]

[options.entry_points]
console_scripts = 
	transfer_vn = export_vn.transfer_vn:run
	update_vn = update.update_vn:run
	update_uuid = update.update_uuid:run
	validate = schemas.validate:run

[test]
extras = True

[tool:pytest]
addopts = 
	--verbose
	--durations=10
norecursedirs = 
	dist
	build
	.tox
testpaths = 
	tests
markers = 
	slow

[tox:tox]
minversion = 2.4
envlist = clean,cover,py39,py310,py311,flake8,docs
skip_missing_interpreters = True

[testenv]
setenv = TOXINIDIR = {toxinidir}
passenv = 
	HOME
commands = 
	pytest --cov {posargs}
extras = 
	all
	install_requires
	tests_require
deps = 
	-r{toxinidir}/requirements.txt
	codecov
	flake8
	mypy
	pytest
	pytest-order
	pytest-cov
whitelist_externals = 
	rm

[testenv:clean]
deps = coverage
skip_install = True
commands = 
	coverage erase
	rm -f coverage.xml

[testenv:cover]
deps = 
	coverage
	codecov
passenv = CODECOV_TOKEN
skip_install = True
commands = 
	- coverage combine --append
	coverage xml --ignore-errors
	- codecov -X gcov

[testenv:flake8]
skip_install = True
changedir = {toxinidir}
deps = flake8
commands = flake8 setup.py src tests

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps = 
	sphinx >2
	sphinx_rtd_theme
commands = python setup.py docs

[coverage:run]
branch = True
concurrency = multiprocessing
parallel = True
source = 
	biolovision
	export_vn
	update

[coverage:paths]
source = 
	src
	.tox/*/lib/*/site-packages

[coverage:report]
exclude_lines = 
	pragma: no cover
	
	def __repr__
	if self\.debug
	
	raise AssertionError
	raise HTTPError
	raise NotImplementedError
	raise NotImplementedException
	raise StorePostgresqlException
	
	if __name__ == .__main__.:

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
no-vcs = 1
formats = bdist_wheel

[pylama]
ignore = E0602

[pylama:pyflakes]
builtins = _

[pylama:pycodestyle]
max_line_length = 88

[pylama:pylint]
max_line_length = 88
disable = R

[flake8]
exclude = 
	.tox
	build
	dist
	.eggs
	docs/conf.py
builtins = _
max-line-length = 120
extend-ignore = 
	E203,

[extract_messages]
output_file = src/export_vn/locale/export_vn.pot
input-dirs = src
copyright-holder = LPO Auvergne-Rh√¥ne-Alpes

[init_catalog]
input_file = src/export_vn/locale/export_vn.pot
output_dir = src/export_vn/locale/
domain = export_vn

[update_catalog]
input_file = src/export_vn/locale/export_vn.pot
output_dir = src/export_vn/locale/
domain = export_vn
no-fuzzy-matching = 1

[compile_catalog]
directory = src/export_vn/locale/
domain = export_vn
statistics = 1

[mypy]
warn_return_any = True

[mypy-strictyaml]
ignore_missing_imports = True

[mypy-sqlalchemy]
ignore_missing_imports = True

[mypy-sqlalchemy.*]
ignore_missing_imports = True

[mypy-psycopg2.extensions]
ignore_missing_imports = True

[mypy-pyproj]
ignore_missing_imports = True

[mypy-requests_oauthlib]
ignore_missing_imports = True

[mypy-bs4]
ignore_missing_imports = True

[pyscaffold]
version = 3.2.1
package = export_vn
extensions = 
	no_skeleton
	tox

[egg_info]
tag_build = 
tag_date = 0

