
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/datasets_io/plot_moabb_dataset_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_datasets_io_plot_moabb_dataset_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_datasets_io_plot_moabb_dataset_example.py:

MOABB Dataset Example
========================

In this example, we show how to fetch and prepare a MOABB dataset for usage
with Braindecode.

.. GENERATED FROM PYTHON SOURCE LINES 7-18

.. code-block:: default


    # Authors: Lukas Gemein <l.gemein@gmail.com>
    #          Hubert Banville <hubert.jbanville@gmail.com>
    #          Simon Brandt <simonbrandt@protonmail.com>
    #          Daniel Wilson <dan.c.wil@gmail.com>
    #
    # License: BSD (3-clause)

    from braindecode.datasets import MOABBDataset
    from braindecode.preprocessing import preprocess, Preprocessor








.. GENERATED FROM PYTHON SOURCE LINES 19-20

First, we create a dataset based on BCIC IV 2a fetched with MOABB,

.. GENERATED FROM PYTHON SOURCE LINES 20-22

.. code-block:: default

    dataset = MOABBDataset(dataset_name="BNCI2014001", subject_ids=[1])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]




.. GENERATED FROM PYTHON SOURCE LINES 23-24

The dataset has a pandas DataFrame with additional description of its internal datasets

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: default

    dataset.description






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>subject</th>
          <th>session</th>
          <th>run</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1</td>
          <td>session_T</td>
          <td>run_0</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1</td>
          <td>session_T</td>
          <td>run_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>1</td>
          <td>session_T</td>
          <td>run_2</td>
        </tr>
        <tr>
          <th>3</th>
          <td>1</td>
          <td>session_T</td>
          <td>run_3</td>
        </tr>
        <tr>
          <th>4</th>
          <td>1</td>
          <td>session_T</td>
          <td>run_4</td>
        </tr>
        <tr>
          <th>5</th>
          <td>1</td>
          <td>session_T</td>
          <td>run_5</td>
        </tr>
        <tr>
          <th>6</th>
          <td>1</td>
          <td>session_E</td>
          <td>run_0</td>
        </tr>
        <tr>
          <th>7</th>
          <td>1</td>
          <td>session_E</td>
          <td>run_1</td>
        </tr>
        <tr>
          <th>8</th>
          <td>1</td>
          <td>session_E</td>
          <td>run_2</td>
        </tr>
        <tr>
          <th>9</th>
          <td>1</td>
          <td>session_E</td>
          <td>run_3</td>
        </tr>
        <tr>
          <th>10</th>
          <td>1</td>
          <td>session_E</td>
          <td>run_4</td>
        </tr>
        <tr>
          <th>11</th>
          <td>1</td>
          <td>session_E</td>
          <td>run_5</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 27-30

We can iterate through dataset which yields one time point of a continuous signal x,
and a target y (which can be None if targets are not defined for the entire
continuous signal).

.. GENERATED FROM PYTHON SOURCE LINES 30-34

.. code-block:: default

    for x, y in dataset:
        print(x.shape, y)
        break





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (26, 1) None




.. GENERATED FROM PYTHON SOURCE LINES 35-37

We can apply preprocessing transforms that are defined in mne and work
in-place, such as resampling, bandpass filtering, or electrode selection.

.. GENERATED FROM PYTHON SOURCE LINES 37-45

.. code-block:: default

    preprocessors = [
        Preprocessor('pick_types', eeg=True, meg=False, stim=True),
        Preprocessor('resample', sfreq=100)
    ]
    print(dataset.datasets[0].raw.info["sfreq"])
    preprocess(dataset, preprocessors)
    print(dataset.datasets[0].raw.info["sfreq"])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    250.0
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    NOTE: pick_types() is a legacy function. New code should use inst.pick(...).
    48 events found
    Event IDs: [1 2 3 4]
    48 events found
    Event IDs: [1 2 3 4]
    100.0




.. GENERATED FROM PYTHON SOURCE LINES 46-48

We can easily split the dataset based on a criteria applied to the description
DataFrame:

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: default

    subsets = dataset.split("session")
    print({subset_name: len(subset) for subset_name, subset in subsets.items()})





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {'session_E': 232164, 'session_T': 232164}




.. GENERATED FROM PYTHON SOURCE LINES 52-55

See our `Trialwise Decoding <../model_building/plot_bcic_iv_2a_moabb_trial.html>`__ and
`Cropped Decoding <../model_building/plot_bcic_iv_2a_moabb_cropped.html>`__ examples for
training with this dataset.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 6.399 seconds)

**Estimated memory usage:**  125 MB


.. _sphx_glr_download_auto_examples_datasets_io_plot_moabb_dataset_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_moabb_dataset_example.py <plot_moabb_dataset_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_moabb_dataset_example.ipynb <plot_moabb_dataset_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
