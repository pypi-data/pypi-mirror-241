# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/ptrc',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/ptrc',
                'lib_path': 'ptrc'},
  'syms': { 'ptrc.atyp': {},
            'ptrc.cons': {},
            'ptrc.enum': { 'ptrc.enum.Channels': ('enum.html#channels', 'ptrc/enum.py'),
                           'ptrc.enum.Channels._missing_': ('enum.html#channels._missing_', 'ptrc/enum.py'),
                           'ptrc.enum.Channels.cidx': ('enum.html#channels.cidx', 'ptrc/enum.py'),
                           'ptrc.enum.Channels.flip': ('enum.html#channels.flip', 'ptrc/enum.py'),
                           'ptrc.enum.Channels.safe': ('enum.html#channels.safe', 'ptrc/enum.py'),
                           'ptrc.enum.Channels.to': ('enum.html#channels.to', 'ptrc/enum.py'),
                           'ptrc.enum.InitMethod': ('enum.html#initmethod', 'ptrc/enum.py'),
                           'ptrc.enum.InitMethod._missing_': ('enum.html#initmethod._missing_', 'ptrc/enum.py'),
                           'ptrc.enum.InitMethod.get': ('enum.html#initmethod.get', 'ptrc/enum.py'),
                           'ptrc.enum.NonLinearity': ('enum.html#nonlinearity', 'ptrc/enum.py'),
                           'ptrc.enum.NonLinearity._missing_': ('enum.html#nonlinearity._missing_', 'ptrc/enum.py'),
                           'ptrc.enum.NonLinearity.get': ('enum.html#nonlinearity.get', 'ptrc/enum.py'),
                           'ptrc.enum.RecurrentLayer': ('enum.html#recurrentlayer', 'ptrc/enum.py'),
                           'ptrc.enum.RecurrentLayer._missing_': ('enum.html#recurrentlayer._missing_', 'ptrc/enum.py'),
                           'ptrc.enum.RecurrentLayer.get': ('enum.html#recurrentlayer.get', 'ptrc/enum.py'),
                           'ptrc.enum.missing': ('enum.html#missing', 'ptrc/enum.py')},
            'ptrc.init': { 'ptrc.init.directed_layers': ('init.html#directed_layers', 'ptrc/init.py'),
                           'ptrc.init.directions': ('init.html#directions', 'ptrc/init.py'),
                           'ptrc.init.init_c0': ('init.html#init_c0', 'ptrc/init.py'),
                           'ptrc.init.init_h0': ('init.html#init_h0', 'ptrc/init.py'),
                           'ptrc.init.init_r0': ('init.html#init_r0', 'ptrc/init.py'),
                           'ptrc.init.init_rn': ('init.html#init_rn', 'ptrc/init.py'),
                           'ptrc.init.init_s0': ('init.html#init_s0', 'ptrc/init.py')},
            'ptrc.io': { 'ptrc.io.load_avi': ('io.html#load_avi', 'ptrc/io.py'),
                         'ptrc.io.moviefps': ('io.html#moviefps', 'ptrc/io.py'),
                         'ptrc.io.save_avi': ('io.html#save_avi', 'ptrc/io.py')},
            'ptrc.kwds': { 'ptrc.kwds.recurrent_decoder_kwds': ('kwds.html#recurrent_decoder_kwds', 'ptrc/kwds.py'),
                           'ptrc.kwds.recurrent_encoder_kwds': ('kwds.html#recurrent_encoder_kwds', 'ptrc/kwds.py'),
                           'ptrc.kwds.recurrent_kwds': ('kwds.html#recurrent_kwds', 'ptrc/kwds.py')},
            'ptrc.logr': { 'ptrc.logr.DecoderLogMessage': ('logr.html#decoderlogmessage', 'ptrc/logr.py'),
                           'ptrc.logr.EncoderLogMessage': ('logr.html#encoderlogmessage', 'ptrc/logr.py'),
                           'ptrc.logr.LogMessage': ('logr.html#logmessage', 'ptrc/logr.py'),
                           'ptrc.logr.LogMessage.__call__': ('logr.html#logmessage.__call__', 'ptrc/logr.py'),
                           'ptrc.logr.LogMessage.__init__': ('logr.html#logmessage.__init__', 'ptrc/logr.py'),
                           'ptrc.logr.LogMessage.append_extras': ('logr.html#logmessage.append_extras', 'ptrc/logr.py'),
                           'ptrc.logr.LogMessage.register_level': ('logr.html#logmessage.register_level', 'ptrc/logr.py'),
                           'ptrc.logr.RecurrentLogMessage': ('logr.html#recurrentlogmessage', 'ptrc/logr.py'),
                           'ptrc.logr.RecurrentLogMessage.__init__': ('logr.html#recurrentlogmessage.__init__', 'ptrc/logr.py')},
            'ptrc.rcur': { 'ptrc.rcur.AutoEncoder': ('rcur.html#autoencoder', 'ptrc/rcur.py'),
                           'ptrc.rcur.AutoEncoder.__init__': ('rcur.html#autoencoder.__init__', 'ptrc/rcur.py'),
                           'ptrc.rcur.AutoEncoder.decode': ('rcur.html#autoencoder.decode', 'ptrc/rcur.py'),
                           'ptrc.rcur.AutoEncoder.encode': ('rcur.html#autoencoder.encode', 'ptrc/rcur.py'),
                           'ptrc.rcur.AutoEncoder.forward': ('rcur.html#autoencoder.forward', 'ptrc/rcur.py'),
                           'ptrc.rcur.AutoEncoder.latent': ('rcur.html#autoencoder.latent', 'ptrc/rcur.py'),
                           'ptrc.rcur.Decoder': ('rcur.html#decoder', 'ptrc/rcur.py'),
                           'ptrc.rcur.Decoder.__init__': ('rcur.html#decoder.__init__', 'ptrc/rcur.py'),
                           'ptrc.rcur.Decoder.forward': ('rcur.html#decoder.forward', 'ptrc/rcur.py'),
                           'ptrc.rcur.Decoder.fulldec': ('rcur.html#decoder.fulldec', 'ptrc/rcur.py'),
                           'ptrc.rcur.Decoder.iterdec': ('rcur.html#decoder.iterdec', 'ptrc/rcur.py'),
                           'ptrc.rcur.Decoder.prep_states': ('rcur.html#decoder.prep_states', 'ptrc/rcur.py'),
                           'ptrc.rcur.Encoder': ('rcur.html#encoder', 'ptrc/rcur.py'),
                           'ptrc.rcur.Encoder.__init__': ('rcur.html#encoder.__init__', 'ptrc/rcur.py'),
                           'ptrc.rcur.Encoder.forward': ('rcur.html#encoder.forward', 'ptrc/rcur.py'),
                           'ptrc.rcur.Encoder.latent': ('rcur.html#encoder.latent', 'ptrc/rcur.py'),
                           'ptrc.rcur.RecurrentAutoEncoderMixin': ('rcur.html#recurrentautoencodermixin', 'ptrc/rcur.py'),
                           'ptrc.rcur.RecurrentAutoEncoderMixin.init_params': ( 'rcur.html#recurrentautoencodermixin.init_params',
                                                                                'ptrc/rcur.py'),
                           'ptrc.rcur.RecurrentAutoEncoderMixin.prep_inputs': ( 'rcur.html#recurrentautoencodermixin.prep_inputs',
                                                                                'ptrc/rcur.py')},
            'ptrc.util': { 'ptrc.util.as2d': ('util.html#as2d', 'ptrc/util.py'),
                           'ptrc.util.as3d': ('util.html#as3d', 'ptrc/util.py'),
                           'ptrc.util.as4d': ('util.html#as4d', 'ptrc/util.py'),
                           'ptrc.util.batches': ('util.html#batches', 'ptrc/util.py'),
                           'ptrc.util.channels': ('util.html#channels', 'ptrc/util.py'),
                           'ptrc.util.get_torch_module': ('util.html#get_torch_module', 'ptrc/util.py'),
                           'ptrc.util.is2d': ('util.html#is2d', 'ptrc/util.py'),
                           'ptrc.util.is3d': ('util.html#is3d', 'ptrc/util.py'),
                           'ptrc.util.last': ('util.html#last', 'ptrc/util.py')}}}
