# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from caikit.runtime.WatsonNlp import categoriestaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_categoriestaskrequest__pb2
from caikit.runtime.WatsonNlp import classificationtaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_classificationtaskrequest__pb2
from caikit.runtime.WatsonNlp import conceptstaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_conceptstaskrequest__pb2
from caikit.runtime.WatsonNlp import detagtaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_detagtaskrequest__pb2
from caikit.runtime.WatsonNlp import emotiontaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_emotiontaskrequest__pb2
from caikit.runtime.WatsonNlp import entitymentionstaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_entitymentionstaskrequest__pb2
from caikit.runtime.WatsonNlp import keywordstaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_keywordstaskrequest__pb2
from caikit.runtime.WatsonNlp import langdetecttaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_langdetecttaskrequest__pb2
from caikit.runtime.WatsonNlp import nounphrasestaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_nounphrasestaskrequest__pb2
from caikit.runtime.WatsonNlp import relationstaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_relationstaskrequest__pb2
from caikit.runtime.WatsonNlp import rulestaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_rulestaskrequest__pb2
from caikit.runtime.WatsonNlp import sentimenttaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_sentimenttaskrequest__pb2
from caikit.runtime.WatsonNlp import syntaxtaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_syntaxtaskrequest__pb2
from caikit.runtime.WatsonNlp import targetssentimenttaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_targetssentimenttaskrequest__pb2
from caikit.runtime.WatsonNlp import topicstaskrequest_pb2 as caikit_dot_runtime_dot_WatsonNlp_dot_topicstaskrequest__pb2
from watson_nlp_data_model import categoriesprediction_pb2 as watson__nlp__data__model_dot_categoriesprediction__pb2
from watson_nlp_data_model import classificationprediction_pb2 as watson__nlp__data__model_dot_classificationprediction__pb2
from watson_nlp_data_model import conceptsprediction_pb2 as watson__nlp__data__model_dot_conceptsprediction__pb2
from watson_nlp_data_model import detagprediction_pb2 as watson__nlp__data__model_dot_detagprediction__pb2
from watson_nlp_data_model import emotionprediction_pb2 as watson__nlp__data__model_dot_emotionprediction__pb2
from watson_nlp_data_model import entitymentionsprediction_pb2 as watson__nlp__data__model_dot_entitymentionsprediction__pb2
from watson_nlp_data_model import keywordsprediction_pb2 as watson__nlp__data__model_dot_keywordsprediction__pb2
from watson_nlp_data_model import langdetectprediction_pb2 as watson__nlp__data__model_dot_langdetectprediction__pb2
from watson_nlp_data_model import nounphrasesprediction_pb2 as watson__nlp__data__model_dot_nounphrasesprediction__pb2
from watson_nlp_data_model import relationsprediction_pb2 as watson__nlp__data__model_dot_relationsprediction__pb2
from watson_nlp_data_model import rulesprediction_pb2 as watson__nlp__data__model_dot_rulesprediction__pb2
from watson_nlp_data_model import sentimentprediction_pb2 as watson__nlp__data__model_dot_sentimentprediction__pb2
from watson_nlp_data_model import syntaxprediction_pb2 as watson__nlp__data__model_dot_syntaxprediction__pb2
from watson_nlp_data_model import targetssentimentprediction_pb2 as watson__nlp__data__model_dot_targetssentimentprediction__pb2
from watson_nlp_data_model import topicsprediction_pb2 as watson__nlp__data__model_dot_topicsprediction__pb2


class WatsonNlpServiceStub(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CategoriesTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/CategoriesTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_categoriestaskrequest__pb2.CategoriesTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_categoriesprediction__pb2.CategoriesPrediction.FromString,
                )
        self.ClassificationTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/ClassificationTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_classificationtaskrequest__pb2.ClassificationTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_classificationprediction__pb2.ClassificationPrediction.FromString,
                )
        self.ConceptsTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/ConceptsTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_conceptstaskrequest__pb2.ConceptsTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_conceptsprediction__pb2.ConceptsPrediction.FromString,
                )
        self.DetagTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/DetagTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_detagtaskrequest__pb2.DetagTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_detagprediction__pb2.DetagPrediction.FromString,
                )
        self.EmotionTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/EmotionTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_emotiontaskrequest__pb2.EmotionTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_emotionprediction__pb2.EmotionPrediction.FromString,
                )
        self.EntityMentionsTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/EntityMentionsTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_entitymentionstaskrequest__pb2.EntityMentionsTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_entitymentionsprediction__pb2.EntityMentionsPrediction.FromString,
                )
        self.KeywordsTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/KeywordsTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_keywordstaskrequest__pb2.KeywordsTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_keywordsprediction__pb2.KeywordsPrediction.FromString,
                )
        self.LangDetectTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/LangDetectTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_langdetecttaskrequest__pb2.LangDetectTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_langdetectprediction__pb2.LangDetectPrediction.FromString,
                )
        self.NounPhrasesTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/NounPhrasesTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_nounphrasestaskrequest__pb2.NounPhrasesTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_nounphrasesprediction__pb2.NounPhrasesPrediction.FromString,
                )
        self.RelationsTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/RelationsTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_relationstaskrequest__pb2.RelationsTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_relationsprediction__pb2.RelationsPrediction.FromString,
                )
        self.RulesTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/RulesTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_rulestaskrequest__pb2.RulesTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_rulesprediction__pb2.RulesPrediction.FromString,
                )
        self.SentimentTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/SentimentTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_sentimenttaskrequest__pb2.SentimentTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_sentimentprediction__pb2.SentimentPrediction.FromString,
                )
        self.SyntaxTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/SyntaxTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_syntaxtaskrequest__pb2.SyntaxTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_syntaxprediction__pb2.SyntaxPrediction.FromString,
                )
        self.TargetsSentimentTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/TargetsSentimentTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_targetssentimenttaskrequest__pb2.TargetsSentimentTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_targetssentimentprediction__pb2.TargetsSentimentPrediction.FromString,
                )
        self.TopicsTaskPredict = channel.unary_unary(
                '/caikit.runtime.WatsonNlp.WatsonNlpService/TopicsTaskPredict',
                request_serializer=caikit_dot_runtime_dot_WatsonNlp_dot_topicstaskrequest__pb2.TopicsTaskRequest.SerializeToString,
                response_deserializer=watson__nlp__data__model_dot_topicsprediction__pb2.TopicsPrediction.FromString,
                )


class WatsonNlpServiceServicer(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    def CategoriesTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassificationTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConceptsTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetagTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EmotionTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityMentionsTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KeywordsTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LangDetectTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NounPhrasesTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelationsTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RulesTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SentimentTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyntaxTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TargetsSentimentTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TopicsTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WatsonNlpServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CategoriesTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.CategoriesTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_categoriestaskrequest__pb2.CategoriesTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_categoriesprediction__pb2.CategoriesPrediction.SerializeToString,
            ),
            'ClassificationTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassificationTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_classificationtaskrequest__pb2.ClassificationTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_classificationprediction__pb2.ClassificationPrediction.SerializeToString,
            ),
            'ConceptsTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.ConceptsTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_conceptstaskrequest__pb2.ConceptsTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_conceptsprediction__pb2.ConceptsPrediction.SerializeToString,
            ),
            'DetagTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.DetagTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_detagtaskrequest__pb2.DetagTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_detagprediction__pb2.DetagPrediction.SerializeToString,
            ),
            'EmotionTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.EmotionTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_emotiontaskrequest__pb2.EmotionTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_emotionprediction__pb2.EmotionPrediction.SerializeToString,
            ),
            'EntityMentionsTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityMentionsTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_entitymentionstaskrequest__pb2.EntityMentionsTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_entitymentionsprediction__pb2.EntityMentionsPrediction.SerializeToString,
            ),
            'KeywordsTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.KeywordsTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_keywordstaskrequest__pb2.KeywordsTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_keywordsprediction__pb2.KeywordsPrediction.SerializeToString,
            ),
            'LangDetectTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.LangDetectTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_langdetecttaskrequest__pb2.LangDetectTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_langdetectprediction__pb2.LangDetectPrediction.SerializeToString,
            ),
            'NounPhrasesTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.NounPhrasesTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_nounphrasestaskrequest__pb2.NounPhrasesTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_nounphrasesprediction__pb2.NounPhrasesPrediction.SerializeToString,
            ),
            'RelationsTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.RelationsTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_relationstaskrequest__pb2.RelationsTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_relationsprediction__pb2.RelationsPrediction.SerializeToString,
            ),
            'RulesTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.RulesTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_rulestaskrequest__pb2.RulesTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_rulesprediction__pb2.RulesPrediction.SerializeToString,
            ),
            'SentimentTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.SentimentTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_sentimenttaskrequest__pb2.SentimentTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_sentimentprediction__pb2.SentimentPrediction.SerializeToString,
            ),
            'SyntaxTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.SyntaxTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_syntaxtaskrequest__pb2.SyntaxTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_syntaxprediction__pb2.SyntaxPrediction.SerializeToString,
            ),
            'TargetsSentimentTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.TargetsSentimentTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_targetssentimenttaskrequest__pb2.TargetsSentimentTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_targetssentimentprediction__pb2.TargetsSentimentPrediction.SerializeToString,
            ),
            'TopicsTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.TopicsTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_WatsonNlp_dot_topicstaskrequest__pb2.TopicsTaskRequest.FromString,
                    response_serializer=watson__nlp__data__model_dot_topicsprediction__pb2.TopicsPrediction.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'caikit.runtime.WatsonNlp.WatsonNlpService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WatsonNlpService(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    @staticmethod
    def CategoriesTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/CategoriesTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_categoriestaskrequest__pb2.CategoriesTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_categoriesprediction__pb2.CategoriesPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassificationTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/ClassificationTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_classificationtaskrequest__pb2.ClassificationTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_classificationprediction__pb2.ClassificationPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConceptsTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/ConceptsTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_conceptstaskrequest__pb2.ConceptsTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_conceptsprediction__pb2.ConceptsPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DetagTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/DetagTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_detagtaskrequest__pb2.DetagTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_detagprediction__pb2.DetagPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EmotionTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/EmotionTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_emotiontaskrequest__pb2.EmotionTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_emotionprediction__pb2.EmotionPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EntityMentionsTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/EntityMentionsTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_entitymentionstaskrequest__pb2.EntityMentionsTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_entitymentionsprediction__pb2.EntityMentionsPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KeywordsTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/KeywordsTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_keywordstaskrequest__pb2.KeywordsTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_keywordsprediction__pb2.KeywordsPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LangDetectTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/LangDetectTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_langdetecttaskrequest__pb2.LangDetectTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_langdetectprediction__pb2.LangDetectPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NounPhrasesTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/NounPhrasesTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_nounphrasestaskrequest__pb2.NounPhrasesTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_nounphrasesprediction__pb2.NounPhrasesPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelationsTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/RelationsTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_relationstaskrequest__pb2.RelationsTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_relationsprediction__pb2.RelationsPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RulesTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/RulesTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_rulestaskrequest__pb2.RulesTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_rulesprediction__pb2.RulesPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SentimentTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/SentimentTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_sentimenttaskrequest__pb2.SentimentTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_sentimentprediction__pb2.SentimentPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyntaxTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/SyntaxTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_syntaxtaskrequest__pb2.SyntaxTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_syntaxprediction__pb2.SyntaxPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TargetsSentimentTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/TargetsSentimentTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_targetssentimenttaskrequest__pb2.TargetsSentimentTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_targetssentimentprediction__pb2.TargetsSentimentPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TopicsTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.WatsonNlp.WatsonNlpService/TopicsTaskPredict',
            caikit_dot_runtime_dot_WatsonNlp_dot_topicstaskrequest__pb2.TopicsTaskRequest.SerializeToString,
            watson__nlp__data__model_dot_topicsprediction__pb2.TopicsPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
