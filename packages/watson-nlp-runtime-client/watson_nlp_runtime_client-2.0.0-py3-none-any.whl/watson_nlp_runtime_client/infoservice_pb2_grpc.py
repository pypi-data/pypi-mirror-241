# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from caikit_data_model.common.runtime import runtimeinforequest_pb2 as caikit__data__model_dot_common_dot_runtime_dot_runtimeinforequest__pb2
from caikit_data_model.common.runtime import runtimeinforesponse_pb2 as caikit__data__model_dot_common_dot_runtime_dot_runtimeinforesponse__pb2


class InfoServiceStub(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRuntimeInfo = channel.unary_unary(
                '/caikit.runtime.info.InfoService/GetRuntimeInfo',
                request_serializer=caikit__data__model_dot_common_dot_runtime_dot_runtimeinforequest__pb2.RuntimeInfoRequest.SerializeToString,
                response_deserializer=caikit__data__model_dot_common_dot_runtime_dot_runtimeinforesponse__pb2.RuntimeInfoResponse.FromString,
                )


class InfoServiceServicer(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    def GetRuntimeInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRuntimeInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRuntimeInfo,
                    request_deserializer=caikit__data__model_dot_common_dot_runtime_dot_runtimeinforequest__pb2.RuntimeInfoRequest.FromString,
                    response_serializer=caikit__data__model_dot_common_dot_runtime_dot_runtimeinforesponse__pb2.RuntimeInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'caikit.runtime.info.InfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InfoService(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    @staticmethod
    def GetRuntimeInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.info.InfoService/GetRuntimeInfo',
            caikit__data__model_dot_common_dot_runtime_dot_runtimeinforequest__pb2.RuntimeInfoRequest.SerializeToString,
            caikit__data__model_dot_common_dot_runtime_dot_runtimeinforesponse__pb2.RuntimeInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
