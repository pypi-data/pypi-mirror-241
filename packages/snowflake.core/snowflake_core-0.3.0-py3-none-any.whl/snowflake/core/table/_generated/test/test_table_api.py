# coding: utf-8

"""
    Snowflake Table API

    The Snowflake Table API is a REST API that you can use to access, update, and perform certain actions on Tables resource in a Snowflake database.  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: support@snowflake.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import snowflake.core.table._generated
from snowflake.core.table._generated.api.table_api import TableApi  # noqa: E501
from snowflake.core.table._generated.api_client import BridgeApiClient
from snowflake.core.table._generated.rest import ApiException

from typing import Dict, List, Optional


class TestTableApi(unittest.TestCase):
    """TableApi unit test stubs"""

    def setUp(self):
        self.api = snowflake.core.table._generated.api.table_api.TableApi(BridgeApiClient())  # noqa: E501

    def tearDown(self):
        pass

    def test_add_search_optimization(self):
        """Test case for add_search_optimization

        Add search optimization.  # noqa: E501
        """
        pass

    def test_create_or_update_table(self):
        """Test case for create_or_update_table

        Create a (or alter an existing) table.  # noqa: E501
        """
        pass

    def test_create_table(self):
        """Test case for create_table

        Create a table  # noqa: E501
        """
        pass

    def test_delete_row_access_policy(self):
        """Test case for delete_row_access_policy

        Delete a row access policy.  # noqa: E501
        """
        pass

    def test_delete_search_optimization(self):
        """Test case for delete_search_optimization

        Delete search optimization.  # noqa: E501
        """
        pass

    def test_delete_table(self):
        """Test case for delete_table

        Delete a table  # noqa: E501
        """
        pass

    def test_fetch_effective_parameters(self):
        """Test case for fetch_effective_parameters

        Fetch the effective parameters of a table.  # noqa: E501
        """
        pass

    def test_fetch_table(self):
        """Test case for fetch_table

        Fetch a table.  # noqa: E501
        """
        pass

    def test_list_tables(self):
        """Test case for list_tables

        List tables  # noqa: E501
        """
        pass

    def test_rename_column(self):
        """Test case for rename_column

        Rename a column  # noqa: E501
        """
        pass

    def test_rename_constraint(self):
        """Test case for rename_constraint

        Rename a table constraint.  # noqa: E501
        """
        pass

    def test_rename_table(self):
        """Test case for rename_table

        Rename a table  # noqa: E501
        """
        pass

    def test_resume_recluster(self):
        """Test case for resume_recluster

        Resume recluster of a table  # noqa: E501
        """
        pass

    def test_set_column_masking_policy(self):
        """Test case for set_column_masking_policy

        Set column masking policy.  # noqa: E501
        """
        pass

    def test_set_row_access_policy(self):
        """Test case for set_row_access_policy

        Set row access policy.  # noqa: E501
        """
        pass

    def test_suspend_recluster(self):
        """Test case for suspend_recluster

        Suspend recluster of a table  # noqa: E501
        """
        pass

    def test_swap_with(self):
        """Test case for swap_with

        Swap with another table  # noqa: E501
        """
        pass

    def test_undelete_table(self):
        """Test case for undelete_table

        Undelete a deleted table.  # noqa: E501
        """
        pass

    def test_unset_column_masking_policy(self):
        """Test case for unset_column_masking_policy

        Unset column masking policy.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
