# coding: utf-8

"""
    Snowflake Schema API

    The Snowflake Schema API is a REST API that you can use to access, update, and perform certain actions on Schema resource in Snowflake.  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: support@snowflake.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import snowflake.core.schema._generated
from snowflake.core.schema._generated.models.model_schema import ModelSchema  # noqa: E501
from snowflake.core.schema._generated.rest import ApiException

class TestModelSchema(unittest.TestCase):
    """ModelSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ModelSchema
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelSchema`
        """
        model = snowflake.core.schema._generated.models.model_schema.ModelSchema()  # noqa: E501
        if include_optional :
            return ModelSchema(
                created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                name = '_AMDTMv2D2ylmgd10Z3UB6UkJSISSB512iz2DiJykO4IVP7YNsKQHh9BsaMPOiOuo3_', 
                is_default = True, 
                is_current = True, 
                database_name = '', 
                owner = '', 
                comment = '', 
                options = '', 
                dropped_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                owner_role_type = '', 
                data_retention_time_in_days = 56, 
                default_ddl_collation = '', 
                log_level = 'OFF', 
                pipe_execution_paused = True, 
                max_data_extension_time_in_days = 56, 
                suspend_task_after_num_failures = 56, 
                trace_level = 'OFF', 
                user_task_managed_initial_warehouse_size = 'MEDIUM', 
                user_task_timeout_ms = 56
            )
        else :
            return ModelSchema(
                name = '_AMDTMv2D2ylmgd10Z3UB6UkJSISSB512iz2DiJykO4IVP7YNsKQHh9BsaMPOiOuo3_',
        )
        """

    def testModelSchema(self):
        """Test ModelSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
