"use strict";(self.webpackChunkjupyterlab_notifications=self.webpackChunkjupyterlab_notifications||[]).push([[223],{7223:(e,t,o)=>{o.r(t),o.d(t,{default:()=>g});var n=o(3578),i=o(2167),s=o(9408),c=o(858),a=o(6592),l=o.n(a),r=o(5131),u=o.n(r),d=o(9976);function f(e){"granted"!==e&&alert("Browser Notifications are not allowed. Please update your browser settings to allow notifications.")}async function m(e,t,o,n,i,s,a,l,r,f,m,p,g){const w=new Date,y=e.model,b="code"===y.type,h=y.sharedModel.getSource().length>0;if(b&&h){const e=y.id,b=t.id,h=o.get(e),_=h.scheduledTime,x=n.get(b)||_,N=_>=x?_:x;n.set(b,w);const k=u().utc(u()(w).diff(N)).format("HH:mm:ss");if(u().duration(k).asSeconds()>=i){const e="cell_index"===l?h.index:y.executionCount,o=t.title.label.replace(/\.[^/.]+$/,"");await async function(e,t,o,n,i,s,a,l,r,u){const f={icon:c.PageConfig.getBaseUrl()+"static/favicon.ico",body:""},m=s?`${o} Failed!`:`${o} Completed!`;let p="";s?p=a?`${a.errorName} ${a.errorValue}`:"":l?p=`Total Duration: ${e}`:n&&i?p=`Cell[${t}] Duration: ${e}`:n?p=`Cell Number: ${t}`:i&&(p=`Cell Duration: ${e}`),f.body=p,r.includes("browser")&&new Notification(m,f),r.includes("ntfy")&&u&&await async function(e,t,o){var n,i,s;const{body:c}=t;if(await async function(e){e.hasNoKernel&&await e.initialize().then((async t=>{if(t){const t=await d.KernelAPI.startNew({name:"python3"});await e.changeKernel(t)}})).catch((e=>{console.error(`Failed to initialize the session in jupyterlab-notifications.\n${e}`)}))}(o),!o||!(null===(n=o.session)||void 0===n?void 0:n.kernel))return;const a=e.replace(/"/g,'\\"'),l=`from ntfy import notify; notify("${c.replace(/"/g,'\\"')}", "${a}")`;return null===(s=null===(i=o.session)||void 0===i?void 0:i.kernel)||void 0===s?void 0:s.requestExecute({code:l})}(m,f,u)}(k,e,o,s,a,r,f,m,p,g)}}}const p={id:"jupyterlab-notifications:plugin",autoStart:!0,requires:[s.ISettingRegistry],activate:async(e,t)=>{"Notification"in window?"granted"!==Notification.permission&&(function(){try{Notification.requestPermission().then()}catch(e){return!1}return!0}()?Notification.requestPermission().then((e=>{f(e)})):Notification.requestPermission((e=>{f(e)}))):alert("This browser does not support notifications.");let o=!0,s=60,c=!0,a=!0,r="cell_index",u=!1,d=["browser"];const g=new(l())({max:2500}),w=new(l())({max:500}),y=e.serviceManager,b=new n.SessionContext({sessionManager:y.sessions,specsManager:y.kernelspecs});if(t){const e=await t.load(p.id),n=()=>{o=e.get("enabled").composite,s=e.get("minimum_cell_execution_time").composite,c=e.get("report_cell_execution_time").composite,a=e.get("report_cell_number").composite,r=e.get("cell_number_type").composite,u=e.get("last_cell_only").composite,d=e.get("notification_methods").composite};n(),e.changed.connect(n)}i.NotebookActions.executionScheduled.connect(((e,t)=>{const{cell:n,notebook:i}=t;o&&g.set(n.model.id,{index:i.activeCellIndex,scheduledTime:new Date})})),i.NotebookActions.executed.connect((async(e,t)=>{if(o&&!u){const{cell:e,notebook:o,success:n,error:i}=t;await m(e,o,g,w,s,a,c,r,!n,i,u,d,b)}})),i.NotebookActions.selectionExecuted.connect((async(e,t)=>{if(o&&u){const{lastCell:e,notebook:o}=t,n=!1;await m(e,o,g,w,s,a,c,r,n,null,u,d,b)}}))}},g=p}}]);