[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lezargus"
dynamic = ["version"]
description = "The accompanying data software package to the IRTF SPECTRE Spectrograph."
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [
    { name = "Sparrow", email = "psmd.iberutaru@gmail.com" },
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "colorama==0.4.6",
    "numpy",
    "scipy",
    "astropy",
    "pyyaml",
    "matplotlib",
    "PySide6>=6.5.0",
]

[project.urls]
Homepage = "http://irtfweb.ifa.hawaii.edu/~spectre/"
Documentation = "https://psmd-iberutaru.github.io/Lezargus/"
Issues = "https://github.com/psmd-iberutaru/Lezargus/issues"
Source = "https://github.com/psmd-iberutaru/Lezargus/"

[project.scripts]
lezargus = "lezargus.__main__:main"



# Tools and other build information. 
#####################################

[tool.hatch.version]
path = "src/lezargus/__version__.py"

[tool.hatch.build]
exclude = [
    # We do not want to package the utility scripts and files in a build.
    "./utility/*"
]

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest>=7.3.0",
    "black[jupyter]>=23.1.0",
    "pylint[spelling]>=2.17.0",
    "ruff>=0.0.284",
    "sphinx>=6.1.0",
    "sphinx-book-theme>=1.0.0",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
format = [
    "black {args:.}",
]
cover = [
    "coverage run -m pytest {args:tests}",
    "- coverage combine",
    "coverage report",
    "coverage html",
    "coverage erase",
]
lint = [
    "ruff {args:src}",
    "pylint {args:src}",
]
lintfix = [
    "format",
    "ruff {args:src} --fix"
]
docs = [
    "sphinx-apidoc -f -e -P -o ./docs/source/code/ ./src/lezargus/",
    "sphinx-build -a -b html ./docs/source/ ./docs/build/html/",
    # To build the LaTeX file, uncomment the line below. We do not usually 
    # build it all the time due to its low usage and cluttering of the Git 
    # tree with large files.
    #"sphinx-build -M latexpdf ./docs/source/ ./docs/build/latex/",
]
auxiliary = [
    "format",
    "lintfix",
    "lint",
    "test",
    "cover",
    "format",
    "docs",
]
aux = "auxiliary"


[[tool.hatch.envs.all.matrix]]
python = ["3.11"]

[tool.pytest.ini_options]
pythonpath = [
    ".", "src",
]
testpaths = [
    "tests"
]

[tool.black]
target-version = ["py311"]
line-length = 80
preview = true

[tool.ruff]
target-version = "py311"
line-length = 80
select = [
    "ALL",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes.
    "B027",
    # Allow boolean positional values in function declarations and calls, 
    # like `dict.get(... True)`. We ignore all of the rules regarding boolean 
    # positional traps, because generally, it is a non-issue.
    "FBT",
    # Ignore checks for possible passwords.
    "S105", "S106", "S107",
    # Incompatabilies; these are objectively wrong.
    "D203", "D213",
    # Allow variable assignment for return. It is easier to find and follow the
    # return path.
    "RET504",
    # Sometimes there are actual reasons for having a lot of arguments.
    "PLR0913",
    # Our file paths are better represented as base strings, we do not ever
    # need to overcomplicate our paths with OOP. As such, suggestions to 
    # use pathlib really is not needed.
    "PTH",
    # The use of f-strings, though fine, ought not to be mandated because 
    # a lot of our strings are just error and logging messages and the long 
    # variable names would make f-strings rather unwieldy.
    "UP032",
]
unfixable = [
]

[tool.ruff.isort]
known-first-party = ["lezargus"]
force-single-line = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
# The hint module can have unused imports because it is part of its job to 
# provide hints.
"src/lezargus/library/hint.py" = ["F401", "F403"]
# The __init__ files often provide the imports to other files. 
# So they are used, just not in that file.
"src/lezargus/**/__init__.py" = ["F401"]

[tool.pylint]
good-names-rgxs = [
    # Allow for 2-character names, following the usual snake case conventions.
    "[_a-z][_a-z0-9]?$",
]
disable = [
    "R0801", # (duplicate-code)
    "R0902", # (too-many-instance-attributes)
    "R0903", # (too-few-public-methods)
    "R0913", # (too-many-arguments)
    "R0914", # (too-many-locals)
    "R0401", # (cyclic-import)
    "W0105", # (pointless-string-statement)
    "C0209", # (consider-using-f-string)
]
extension-pkg-allow-list = [
    "PySide6",
]
generated-members = [
    # Configuration parameters are generated on-the-fly.
    # Note: The proper coverage is lezargus.library.config.*, but because of 
    # alises, we use library.config.* for all of the configurations so that is 
    # what we filter.
    "library.config.*",
]

[tool.coverage.run]
source_pkgs = ["lezargus", "tests"]
branch = true
parallel = true
omit = [
    "src/lezargus/__version__.py",
]

[tool.coverage.paths]
lezargus = ["src/lezargus", "*/lezargus/src/lezargus"]
tests = ["tests", "*/lezargus/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
title = "Lezargus Code Coverage Report"
directory = "./docs/build/html/coverage/"