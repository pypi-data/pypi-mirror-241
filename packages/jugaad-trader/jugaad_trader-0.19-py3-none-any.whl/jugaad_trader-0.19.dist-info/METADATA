Metadata-Version: 2.1
Name: jugaad-trader
Version: 0.19
Summary: Free Zerodha API python library
Author-email: jugaad-coder <abc@xyz.com>
License: YOLO LICENSE
        
        THIS SOFTWARE LICENSE IS PROVIDED "ALL CAPS" SO THAT YOU KNOW IT IS SUPER
        SERIOUS AND YOU DON'T MESS AROUND WITH COPYRIGHT LAW BECAUSE YOU WILL GET IN
        TROUBLE. HERE ARE SOME OTHER BUZZWORDS COMMONLY IN THESE THINGS WARRANTIES
        LIABILITY CONTRACT TORT LIABLE CLAIMS RESTRICTION MERCHANTABILITY. NOW HERE'S
        THE REAL LICENSE:
        
        0. This work is in public domain.
        1. Do whatever you want with it.
        
        [ANNEXTURE A](https://github.com/pjreddie/darknet/blob/master/LICENSE.fuck)
        
Project-URL: Homepage, https://marketsetup.in/documentation/jugaad-trader/
Project-URL: Documentation, https://marketsetup.in/documentation/jugaad-trader/
Project-URL: Repository, https://github.com/jugaad-py/jugaad-trader
Project-URL: Issues, https://github.com/jugaad-py/jugaad-trader/issues
Keywords: Zerodha,kiteconnect,pykiteconnect
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE.YOLO.md
Requires-Dist: requests
Requires-Dist: websockets
Requires-Dist: kiteconnect
Requires-Dist: beautifulsoup4
Requires-Dist: Click
Requires-Dist: six
Requires-Dist: pyotp
Requires-Dist: loguru

## Free Zerodha API - jugaad-trader

Jugaad trader implements reverse engineered API for Zerodha in python (hence the name Jugaad). With this library you can programatically execute trades, retrieve your order and trade books, holdings, margins among other things.

Documentation - https://marketsetup.in/documentation/jugaad-trader/

## Installation

```
pip install jugaad-trader
```

### Quick start


### Step 1 - Log in to Zerodha account with jtrader CLI

```
$ jtrader zerodha startsession
User ID >: Zerodha User Id
Password >:
Pin >:
Logged in successfully
```

### Step 2 - Instantiate Zerodha and issue commands

```python
from jugaad_trader import Zerodha
kite = Zerodha()
 
# Set access token loads the stored session.
# Name chosen to keep it compatible with kiteconnect.
kite.set_access_token()

# Get profile
profile = kite.profile()
print(profile)
```

## How to contribute

Refer this document how to contribute - https://github.com/jugaad-py/jugaad-trader/blob/master/contributing.md

## Articles and examples using Jugaad-Trader

https://marketsetup.in/tags/jugaad-trader/

